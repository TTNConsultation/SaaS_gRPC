// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/administrator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protos.Message.Administrator {

  /// <summary>Holder for reflection information generated from Protos/administrator.proto</summary>
  public static partial class AdministratorReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/administrator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AdministratorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpQcm90b3MvYWRtaW5pc3RyYXRvci5wcm90bxINQWRtaW5pc3RyYXRvciKx",
            "AgoKUmVzdGF1cmFudBIKCgJJZBgBIAEoBRIMCgROYW1lGAIgASgJEhwKFFJl",
            "c3RhdXJhbnRMb2NhdGlvbklkGAMgASgFEh4KFlJlc3RhdXJhbnRMb2NhdGlv",
            "bk5hbWUYBCABKAkSJQodUmVzdGF1cmFudExvY2F0aW9uUGhvbmVOdW1iZXIY",
            "BSABKAkSEgoKTG9jYXRpb25JZBgGIAEoBRIUCgxMb2NhdGlvblVuaXQYByAB",
            "KAUSGgoSTG9jYXRpb25Qb3N0YWxDb2RlGAggASgJEhoKEkxvY2F0aW9uU3Ry",
            "ZWV0TmFtZRgJIAEoCRIUCgxMb2NhdGlvbkxpbmsYCiABKAkSEwoLTG9jYXRp",
            "b25NYXAYCyABKAkSFwoPTG9jYXRpb25MYXRMb25nGAwgASgJIjgKC1Jlc3Rh",
            "dXJhbnRzEikKBnZhbHVlcxgBIAMoCzIZLkFkbWluaXN0cmF0b3IuUmVzdGF1",
            "cmFudCJiCgRJdGVtEgoKAklkGAEgASgFEhQKDFJlc3RhdXJhbnRJZBgCIAEo",
            "BRIPCgdOYW1lS2V5GAMgASgFEhYKDkRlc2NyaXB0aW9uS2V5GAQgASgFEg8K",
            "B1N0YXRlSWQYBSABKAUiLAoFSXRlbXMSIwoGdmFsdWVzGAEgAygLMhMuQWRt",
            "aW5pc3RyYXRvci5JdGVtIkMKDlJlc3RhdXJhbnRNZW51EgoKAklkGAEgASgF",
            "EhQKDFJlc3RhdXJhbnRJZBgCIAEoBRIPCgdTdGF0ZUlkGAMgASgFIkAKD1Jl",
            "c3RhdXJhbnRNZW51cxItCgZ2YWx1ZXMYASADKAsyHS5BZG1pbmlzdHJhdG9y",
            "LlJlc3RhdXJhbnRNZW51IpEBCgRNZW51EgoKAklkGAEgASgFEhgKEFJlc3Rh",
            "dXJhbnRNZW51SWQYAiABKAUSDQoFUHJpY2UYAyABKAISGgoSVXNlSXRlbURl",
            "c2NyaXB0aW9uGAQgASgIEg8KB1N0YXRlSWQYBSABKAUSDwoHTmFtZUtleRgG",
            "IAEoBRIWCg5EZXNjcmlwdGlvbktleRgHIAEoBSIsCgVNZW51cxIjCgZ2YWx1",
            "ZXMYASADKAsyEy5BZG1pbmlzdHJhdG9yLk1lbnUiSAoITWVudUl0ZW0SCgoC",
            "SWQYASABKAUSDgoGTWVudUlkGAIgASgFEg4KBkl0ZW1JZBgDIAEoBRIQCghR",
            "dWFudGl0eRgEIAEoBSI0CglNZW51SXRlbXMSJwoGdmFsdWVzGAEgAygLMhcu",
            "QWRtaW5pc3RyYXRvci5NZW51SXRlbSItCgtNZW51SXRlbUlkcxIOCgZtZW51",
            "SWQYASABKAUSDgoGaXRlbUlkGAIgASgFIlAKBVRhYmxlEgoKAklkGAEgASgF",
            "EhQKDFJlc3RhdXJhbnRJZBgCIAEoBRIUCgxOdW1iZXJPZlNlYXQYAyABKAUS",
            "DwoHU3RhdGVJZBgEIAEoBSIuCgZUYWJsZXMSJAoGdmFsdWVzGAEgAygLMhQu",
            "QWRtaW5pc3RyYXRvci5UYWJsZSJKChJSZXN0YXVyYW50TGFuZ3VhZ2USCgoC",
            "SWQYASABKAUSFAoMUmVzdGF1cmFudElkGAIgASgFEhIKCkxhbmd1YWdlSWQY",
            "AyABKAVCH6oCHFByb3Rvcy5NZXNzYWdlLkFkbWluaXN0cmF0b3JiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.Restaurant), global::Protos.Message.Administrator.Restaurant.Parser, new[]{ "Id", "Name", "RestaurantLocationId", "RestaurantLocationName", "RestaurantLocationPhoneNumber", "LocationId", "LocationUnit", "LocationPostalCode", "LocationStreetName", "LocationLink", "LocationMap", "LocationLatLong" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.Restaurants), global::Protos.Message.Administrator.Restaurants.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.Item), global::Protos.Message.Administrator.Item.Parser, new[]{ "Id", "RestaurantId", "NameKey", "DescriptionKey", "StateId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.Items), global::Protos.Message.Administrator.Items.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.RestaurantMenu), global::Protos.Message.Administrator.RestaurantMenu.Parser, new[]{ "Id", "RestaurantId", "StateId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.RestaurantMenus), global::Protos.Message.Administrator.RestaurantMenus.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.Menu), global::Protos.Message.Administrator.Menu.Parser, new[]{ "Id", "RestaurantMenuId", "Price", "UseItemDescription", "StateId", "NameKey", "DescriptionKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.Menus), global::Protos.Message.Administrator.Menus.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.MenuItem), global::Protos.Message.Administrator.MenuItem.Parser, new[]{ "Id", "MenuId", "ItemId", "Quantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.MenuItems), global::Protos.Message.Administrator.MenuItems.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.MenuItemIds), global::Protos.Message.Administrator.MenuItemIds.Parser, new[]{ "MenuId", "ItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.Table), global::Protos.Message.Administrator.Table.Parser, new[]{ "Id", "RestaurantId", "NumberOfSeat", "StateId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.Tables), global::Protos.Message.Administrator.Tables.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protos.Message.Administrator.RestaurantLanguage), global::Protos.Message.Administrator.RestaurantLanguage.Parser, new[]{ "Id", "RestaurantId", "LanguageId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Restaurant : pb::IMessage<Restaurant>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Restaurant> _parser = new pb::MessageParser<Restaurant>(() => new Restaurant());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Restaurant> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Restaurant() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Restaurant(Restaurant other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      restaurantLocationId_ = other.restaurantLocationId_;
      restaurantLocationName_ = other.restaurantLocationName_;
      restaurantLocationPhoneNumber_ = other.restaurantLocationPhoneNumber_;
      locationId_ = other.locationId_;
      locationUnit_ = other.locationUnit_;
      locationPostalCode_ = other.locationPostalCode_;
      locationStreetName_ = other.locationStreetName_;
      locationLink_ = other.locationLink_;
      locationMap_ = other.locationMap_;
      locationLatLong_ = other.locationLatLong_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Restaurant Clone() {
      return new Restaurant(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RestaurantLocationId" field.</summary>
    public const int RestaurantLocationIdFieldNumber = 3;
    private int restaurantLocationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RestaurantLocationId {
      get { return restaurantLocationId_; }
      set {
        restaurantLocationId_ = value;
      }
    }

    /// <summary>Field number for the "RestaurantLocationName" field.</summary>
    public const int RestaurantLocationNameFieldNumber = 4;
    private string restaurantLocationName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RestaurantLocationName {
      get { return restaurantLocationName_; }
      set {
        restaurantLocationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RestaurantLocationPhoneNumber" field.</summary>
    public const int RestaurantLocationPhoneNumberFieldNumber = 5;
    private string restaurantLocationPhoneNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RestaurantLocationPhoneNumber {
      get { return restaurantLocationPhoneNumber_; }
      set {
        restaurantLocationPhoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LocationId" field.</summary>
    public const int LocationIdFieldNumber = 6;
    private int locationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LocationId {
      get { return locationId_; }
      set {
        locationId_ = value;
      }
    }

    /// <summary>Field number for the "LocationUnit" field.</summary>
    public const int LocationUnitFieldNumber = 7;
    private int locationUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LocationUnit {
      get { return locationUnit_; }
      set {
        locationUnit_ = value;
      }
    }

    /// <summary>Field number for the "LocationPostalCode" field.</summary>
    public const int LocationPostalCodeFieldNumber = 8;
    private string locationPostalCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationPostalCode {
      get { return locationPostalCode_; }
      set {
        locationPostalCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LocationStreetName" field.</summary>
    public const int LocationStreetNameFieldNumber = 9;
    private string locationStreetName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationStreetName {
      get { return locationStreetName_; }
      set {
        locationStreetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LocationLink" field.</summary>
    public const int LocationLinkFieldNumber = 10;
    private string locationLink_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationLink {
      get { return locationLink_; }
      set {
        locationLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LocationMap" field.</summary>
    public const int LocationMapFieldNumber = 11;
    private string locationMap_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationMap {
      get { return locationMap_; }
      set {
        locationMap_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LocationLatLong" field.</summary>
    public const int LocationLatLongFieldNumber = 12;
    private string locationLatLong_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocationLatLong {
      get { return locationLatLong_; }
      set {
        locationLatLong_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Restaurant);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Restaurant other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (RestaurantLocationId != other.RestaurantLocationId) return false;
      if (RestaurantLocationName != other.RestaurantLocationName) return false;
      if (RestaurantLocationPhoneNumber != other.RestaurantLocationPhoneNumber) return false;
      if (LocationId != other.LocationId) return false;
      if (LocationUnit != other.LocationUnit) return false;
      if (LocationPostalCode != other.LocationPostalCode) return false;
      if (LocationStreetName != other.LocationStreetName) return false;
      if (LocationLink != other.LocationLink) return false;
      if (LocationMap != other.LocationMap) return false;
      if (LocationLatLong != other.LocationLatLong) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RestaurantLocationId != 0) hash ^= RestaurantLocationId.GetHashCode();
      if (RestaurantLocationName.Length != 0) hash ^= RestaurantLocationName.GetHashCode();
      if (RestaurantLocationPhoneNumber.Length != 0) hash ^= RestaurantLocationPhoneNumber.GetHashCode();
      if (LocationId != 0) hash ^= LocationId.GetHashCode();
      if (LocationUnit != 0) hash ^= LocationUnit.GetHashCode();
      if (LocationPostalCode.Length != 0) hash ^= LocationPostalCode.GetHashCode();
      if (LocationStreetName.Length != 0) hash ^= LocationStreetName.GetHashCode();
      if (LocationLink.Length != 0) hash ^= LocationLink.GetHashCode();
      if (LocationMap.Length != 0) hash ^= LocationMap.GetHashCode();
      if (LocationLatLong.Length != 0) hash ^= LocationLatLong.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (RestaurantLocationId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RestaurantLocationId);
      }
      if (RestaurantLocationName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RestaurantLocationName);
      }
      if (RestaurantLocationPhoneNumber.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RestaurantLocationPhoneNumber);
      }
      if (LocationId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LocationId);
      }
      if (LocationUnit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(LocationUnit);
      }
      if (LocationPostalCode.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LocationPostalCode);
      }
      if (LocationStreetName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(LocationStreetName);
      }
      if (LocationLink.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(LocationLink);
      }
      if (LocationMap.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(LocationMap);
      }
      if (LocationLatLong.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(LocationLatLong);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (RestaurantLocationId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RestaurantLocationId);
      }
      if (RestaurantLocationName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RestaurantLocationName);
      }
      if (RestaurantLocationPhoneNumber.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RestaurantLocationPhoneNumber);
      }
      if (LocationId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LocationId);
      }
      if (LocationUnit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(LocationUnit);
      }
      if (LocationPostalCode.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(LocationPostalCode);
      }
      if (LocationStreetName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(LocationStreetName);
      }
      if (LocationLink.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(LocationLink);
      }
      if (LocationMap.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(LocationMap);
      }
      if (LocationLatLong.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(LocationLatLong);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RestaurantLocationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RestaurantLocationId);
      }
      if (RestaurantLocationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RestaurantLocationName);
      }
      if (RestaurantLocationPhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RestaurantLocationPhoneNumber);
      }
      if (LocationId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocationId);
      }
      if (LocationUnit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocationUnit);
      }
      if (LocationPostalCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationPostalCode);
      }
      if (LocationStreetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationStreetName);
      }
      if (LocationLink.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationLink);
      }
      if (LocationMap.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationMap);
      }
      if (LocationLatLong.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocationLatLong);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Restaurant other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RestaurantLocationId != 0) {
        RestaurantLocationId = other.RestaurantLocationId;
      }
      if (other.RestaurantLocationName.Length != 0) {
        RestaurantLocationName = other.RestaurantLocationName;
      }
      if (other.RestaurantLocationPhoneNumber.Length != 0) {
        RestaurantLocationPhoneNumber = other.RestaurantLocationPhoneNumber;
      }
      if (other.LocationId != 0) {
        LocationId = other.LocationId;
      }
      if (other.LocationUnit != 0) {
        LocationUnit = other.LocationUnit;
      }
      if (other.LocationPostalCode.Length != 0) {
        LocationPostalCode = other.LocationPostalCode;
      }
      if (other.LocationStreetName.Length != 0) {
        LocationStreetName = other.LocationStreetName;
      }
      if (other.LocationLink.Length != 0) {
        LocationLink = other.LocationLink;
      }
      if (other.LocationMap.Length != 0) {
        LocationMap = other.LocationMap;
      }
      if (other.LocationLatLong.Length != 0) {
        LocationLatLong = other.LocationLatLong;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            RestaurantLocationId = input.ReadInt32();
            break;
          }
          case 34: {
            RestaurantLocationName = input.ReadString();
            break;
          }
          case 42: {
            RestaurantLocationPhoneNumber = input.ReadString();
            break;
          }
          case 48: {
            LocationId = input.ReadInt32();
            break;
          }
          case 56: {
            LocationUnit = input.ReadInt32();
            break;
          }
          case 66: {
            LocationPostalCode = input.ReadString();
            break;
          }
          case 74: {
            LocationStreetName = input.ReadString();
            break;
          }
          case 82: {
            LocationLink = input.ReadString();
            break;
          }
          case 90: {
            LocationMap = input.ReadString();
            break;
          }
          case 98: {
            LocationLatLong = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            RestaurantLocationId = input.ReadInt32();
            break;
          }
          case 34: {
            RestaurantLocationName = input.ReadString();
            break;
          }
          case 42: {
            RestaurantLocationPhoneNumber = input.ReadString();
            break;
          }
          case 48: {
            LocationId = input.ReadInt32();
            break;
          }
          case 56: {
            LocationUnit = input.ReadInt32();
            break;
          }
          case 66: {
            LocationPostalCode = input.ReadString();
            break;
          }
          case 74: {
            LocationStreetName = input.ReadString();
            break;
          }
          case 82: {
            LocationLink = input.ReadString();
            break;
          }
          case 90: {
            LocationMap = input.ReadString();
            break;
          }
          case 98: {
            LocationLatLong = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Restaurants : pb::IMessage<Restaurants>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Restaurants> _parser = new pb::MessageParser<Restaurants>(() => new Restaurants());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Restaurants> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Restaurants() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Restaurants(Restaurants other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Restaurants Clone() {
      return new Restaurants(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protos.Message.Administrator.Restaurant> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Protos.Message.Administrator.Restaurant.Parser);
    private readonly pbc::RepeatedField<global::Protos.Message.Administrator.Restaurant> values_ = new pbc::RepeatedField<global::Protos.Message.Administrator.Restaurant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protos.Message.Administrator.Restaurant> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Restaurants);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Restaurants other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Restaurants other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Item : pb::IMessage<Item>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item(Item other) : this() {
      id_ = other.id_;
      restaurantId_ = other.restaurantId_;
      nameKey_ = other.nameKey_;
      descriptionKey_ = other.descriptionKey_;
      stateId_ = other.stateId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "RestaurantId" field.</summary>
    public const int RestaurantIdFieldNumber = 2;
    private int restaurantId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RestaurantId {
      get { return restaurantId_; }
      set {
        restaurantId_ = value;
      }
    }

    /// <summary>Field number for the "NameKey" field.</summary>
    public const int NameKeyFieldNumber = 3;
    private int nameKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NameKey {
      get { return nameKey_; }
      set {
        nameKey_ = value;
      }
    }

    /// <summary>Field number for the "DescriptionKey" field.</summary>
    public const int DescriptionKeyFieldNumber = 4;
    private int descriptionKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DescriptionKey {
      get { return descriptionKey_; }
      set {
        descriptionKey_ = value;
      }
    }

    /// <summary>Field number for the "StateId" field.</summary>
    public const int StateIdFieldNumber = 5;
    private int stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RestaurantId != other.RestaurantId) return false;
      if (NameKey != other.NameKey) return false;
      if (DescriptionKey != other.DescriptionKey) return false;
      if (StateId != other.StateId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RestaurantId != 0) hash ^= RestaurantId.GetHashCode();
      if (NameKey != 0) hash ^= NameKey.GetHashCode();
      if (DescriptionKey != 0) hash ^= DescriptionKey.GetHashCode();
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RestaurantId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RestaurantId);
      }
      if (NameKey != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NameKey);
      }
      if (DescriptionKey != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DescriptionKey);
      }
      if (StateId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RestaurantId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RestaurantId);
      }
      if (NameKey != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NameKey);
      }
      if (DescriptionKey != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DescriptionKey);
      }
      if (StateId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RestaurantId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RestaurantId);
      }
      if (NameKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NameKey);
      }
      if (DescriptionKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DescriptionKey);
      }
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RestaurantId != 0) {
        RestaurantId = other.RestaurantId;
      }
      if (other.NameKey != 0) {
        NameKey = other.NameKey;
      }
      if (other.DescriptionKey != 0) {
        DescriptionKey = other.DescriptionKey;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RestaurantId = input.ReadInt32();
            break;
          }
          case 24: {
            NameKey = input.ReadInt32();
            break;
          }
          case 32: {
            DescriptionKey = input.ReadInt32();
            break;
          }
          case 40: {
            StateId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RestaurantId = input.ReadInt32();
            break;
          }
          case 24: {
            NameKey = input.ReadInt32();
            break;
          }
          case 32: {
            DescriptionKey = input.ReadInt32();
            break;
          }
          case 40: {
            StateId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Items : pb::IMessage<Items>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Items> _parser = new pb::MessageParser<Items>(() => new Items());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Items> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Items() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Items(Items other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Items Clone() {
      return new Items(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protos.Message.Administrator.Item> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Protos.Message.Administrator.Item.Parser);
    private readonly pbc::RepeatedField<global::Protos.Message.Administrator.Item> values_ = new pbc::RepeatedField<global::Protos.Message.Administrator.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protos.Message.Administrator.Item> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Items);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Items other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Items other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RestaurantMenu : pb::IMessage<RestaurantMenu>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RestaurantMenu> _parser = new pb::MessageParser<RestaurantMenu>(() => new RestaurantMenu());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestaurantMenu> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantMenu() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantMenu(RestaurantMenu other) : this() {
      id_ = other.id_;
      restaurantId_ = other.restaurantId_;
      stateId_ = other.stateId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantMenu Clone() {
      return new RestaurantMenu(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "RestaurantId" field.</summary>
    public const int RestaurantIdFieldNumber = 2;
    private int restaurantId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RestaurantId {
      get { return restaurantId_; }
      set {
        restaurantId_ = value;
      }
    }

    /// <summary>Field number for the "StateId" field.</summary>
    public const int StateIdFieldNumber = 3;
    private int stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestaurantMenu);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestaurantMenu other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RestaurantId != other.RestaurantId) return false;
      if (StateId != other.StateId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RestaurantId != 0) hash ^= RestaurantId.GetHashCode();
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RestaurantId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RestaurantId);
      }
      if (StateId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(StateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RestaurantId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RestaurantId);
      }
      if (StateId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(StateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RestaurantId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RestaurantId);
      }
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestaurantMenu other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RestaurantId != 0) {
        RestaurantId = other.RestaurantId;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RestaurantId = input.ReadInt32();
            break;
          }
          case 24: {
            StateId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RestaurantId = input.ReadInt32();
            break;
          }
          case 24: {
            StateId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RestaurantMenus : pb::IMessage<RestaurantMenus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RestaurantMenus> _parser = new pb::MessageParser<RestaurantMenus>(() => new RestaurantMenus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestaurantMenus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantMenus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantMenus(RestaurantMenus other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantMenus Clone() {
      return new RestaurantMenus(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protos.Message.Administrator.RestaurantMenu> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Protos.Message.Administrator.RestaurantMenu.Parser);
    private readonly pbc::RepeatedField<global::Protos.Message.Administrator.RestaurantMenu> values_ = new pbc::RepeatedField<global::Protos.Message.Administrator.RestaurantMenu>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protos.Message.Administrator.RestaurantMenu> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestaurantMenus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestaurantMenus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestaurantMenus other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Menu : pb::IMessage<Menu>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Menu> _parser = new pb::MessageParser<Menu>(() => new Menu());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Menu> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Menu() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Menu(Menu other) : this() {
      id_ = other.id_;
      restaurantMenuId_ = other.restaurantMenuId_;
      price_ = other.price_;
      useItemDescription_ = other.useItemDescription_;
      stateId_ = other.stateId_;
      nameKey_ = other.nameKey_;
      descriptionKey_ = other.descriptionKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Menu Clone() {
      return new Menu(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "RestaurantMenuId" field.</summary>
    public const int RestaurantMenuIdFieldNumber = 2;
    private int restaurantMenuId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RestaurantMenuId {
      get { return restaurantMenuId_; }
      set {
        restaurantMenuId_ = value;
      }
    }

    /// <summary>Field number for the "Price" field.</summary>
    public const int PriceFieldNumber = 3;
    private float price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "UseItemDescription" field.</summary>
    public const int UseItemDescriptionFieldNumber = 4;
    private bool useItemDescription_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseItemDescription {
      get { return useItemDescription_; }
      set {
        useItemDescription_ = value;
      }
    }

    /// <summary>Field number for the "StateId" field.</summary>
    public const int StateIdFieldNumber = 5;
    private int stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    /// <summary>Field number for the "NameKey" field.</summary>
    public const int NameKeyFieldNumber = 6;
    private int nameKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NameKey {
      get { return nameKey_; }
      set {
        nameKey_ = value;
      }
    }

    /// <summary>Field number for the "DescriptionKey" field.</summary>
    public const int DescriptionKeyFieldNumber = 7;
    private int descriptionKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DescriptionKey {
      get { return descriptionKey_; }
      set {
        descriptionKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Menu);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Menu other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RestaurantMenuId != other.RestaurantMenuId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Price, other.Price)) return false;
      if (UseItemDescription != other.UseItemDescription) return false;
      if (StateId != other.StateId) return false;
      if (NameKey != other.NameKey) return false;
      if (DescriptionKey != other.DescriptionKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RestaurantMenuId != 0) hash ^= RestaurantMenuId.GetHashCode();
      if (Price != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Price);
      if (UseItemDescription != false) hash ^= UseItemDescription.GetHashCode();
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (NameKey != 0) hash ^= NameKey.GetHashCode();
      if (DescriptionKey != 0) hash ^= DescriptionKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RestaurantMenuId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RestaurantMenuId);
      }
      if (Price != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Price);
      }
      if (UseItemDescription != false) {
        output.WriteRawTag(32);
        output.WriteBool(UseItemDescription);
      }
      if (StateId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StateId);
      }
      if (NameKey != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(NameKey);
      }
      if (DescriptionKey != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DescriptionKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RestaurantMenuId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RestaurantMenuId);
      }
      if (Price != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Price);
      }
      if (UseItemDescription != false) {
        output.WriteRawTag(32);
        output.WriteBool(UseItemDescription);
      }
      if (StateId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StateId);
      }
      if (NameKey != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(NameKey);
      }
      if (DescriptionKey != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DescriptionKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RestaurantMenuId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RestaurantMenuId);
      }
      if (Price != 0F) {
        size += 1 + 4;
      }
      if (UseItemDescription != false) {
        size += 1 + 1;
      }
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (NameKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NameKey);
      }
      if (DescriptionKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DescriptionKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Menu other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RestaurantMenuId != 0) {
        RestaurantMenuId = other.RestaurantMenuId;
      }
      if (other.Price != 0F) {
        Price = other.Price;
      }
      if (other.UseItemDescription != false) {
        UseItemDescription = other.UseItemDescription;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      if (other.NameKey != 0) {
        NameKey = other.NameKey;
      }
      if (other.DescriptionKey != 0) {
        DescriptionKey = other.DescriptionKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RestaurantMenuId = input.ReadInt32();
            break;
          }
          case 29: {
            Price = input.ReadFloat();
            break;
          }
          case 32: {
            UseItemDescription = input.ReadBool();
            break;
          }
          case 40: {
            StateId = input.ReadInt32();
            break;
          }
          case 48: {
            NameKey = input.ReadInt32();
            break;
          }
          case 56: {
            DescriptionKey = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RestaurantMenuId = input.ReadInt32();
            break;
          }
          case 29: {
            Price = input.ReadFloat();
            break;
          }
          case 32: {
            UseItemDescription = input.ReadBool();
            break;
          }
          case 40: {
            StateId = input.ReadInt32();
            break;
          }
          case 48: {
            NameKey = input.ReadInt32();
            break;
          }
          case 56: {
            DescriptionKey = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Menus : pb::IMessage<Menus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Menus> _parser = new pb::MessageParser<Menus>(() => new Menus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Menus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Menus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Menus(Menus other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Menus Clone() {
      return new Menus(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protos.Message.Administrator.Menu> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Protos.Message.Administrator.Menu.Parser);
    private readonly pbc::RepeatedField<global::Protos.Message.Administrator.Menu> values_ = new pbc::RepeatedField<global::Protos.Message.Administrator.Menu>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protos.Message.Administrator.Menu> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Menus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Menus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Menus other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MenuItem : pb::IMessage<MenuItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MenuItem> _parser = new pb::MessageParser<MenuItem>(() => new MenuItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MenuItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItem(MenuItem other) : this() {
      id_ = other.id_;
      menuId_ = other.menuId_;
      itemId_ = other.itemId_;
      quantity_ = other.quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItem Clone() {
      return new MenuItem(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "MenuId" field.</summary>
    public const int MenuIdFieldNumber = 2;
    private int menuId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MenuId {
      get { return menuId_; }
      set {
        menuId_ = value;
      }
    }

    /// <summary>Field number for the "ItemId" field.</summary>
    public const int ItemIdFieldNumber = 3;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "Quantity" field.</summary>
    public const int QuantityFieldNumber = 4;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MenuItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MenuItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MenuId != other.MenuId) return false;
      if (ItemId != other.ItemId) return false;
      if (Quantity != other.Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (MenuId != 0) hash ^= MenuId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MenuId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MenuId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MenuId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MenuId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (MenuId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MenuId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MenuItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.MenuId != 0) {
        MenuId = other.MenuId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            MenuId = input.ReadInt32();
            break;
          }
          case 24: {
            ItemId = input.ReadInt32();
            break;
          }
          case 32: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            MenuId = input.ReadInt32();
            break;
          }
          case 24: {
            ItemId = input.ReadInt32();
            break;
          }
          case 32: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MenuItems : pb::IMessage<MenuItems>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MenuItems> _parser = new pb::MessageParser<MenuItems>(() => new MenuItems());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MenuItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItems(MenuItems other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItems Clone() {
      return new MenuItems(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protos.Message.Administrator.MenuItem> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Protos.Message.Administrator.MenuItem.Parser);
    private readonly pbc::RepeatedField<global::Protos.Message.Administrator.MenuItem> values_ = new pbc::RepeatedField<global::Protos.Message.Administrator.MenuItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protos.Message.Administrator.MenuItem> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MenuItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MenuItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MenuItems other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MenuItemIds : pb::IMessage<MenuItemIds>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MenuItemIds> _parser = new pb::MessageParser<MenuItemIds>(() => new MenuItemIds());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MenuItemIds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItemIds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItemIds(MenuItemIds other) : this() {
      menuId_ = other.menuId_;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItemIds Clone() {
      return new MenuItemIds(this);
    }

    /// <summary>Field number for the "menuId" field.</summary>
    public const int MenuIdFieldNumber = 1;
    private int menuId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MenuId {
      get { return menuId_; }
      set {
        menuId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MenuItemIds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MenuItemIds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MenuId != other.MenuId) return false;
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MenuId != 0) hash ^= MenuId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MenuId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MenuId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MenuId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MenuId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MenuId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MenuId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MenuItemIds other) {
      if (other == null) {
        return;
      }
      if (other.MenuId != 0) {
        MenuId = other.MenuId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MenuId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MenuId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Table : pb::IMessage<Table>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Table> _parser = new pb::MessageParser<Table>(() => new Table());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Table> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Table() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Table(Table other) : this() {
      id_ = other.id_;
      restaurantId_ = other.restaurantId_;
      numberOfSeat_ = other.numberOfSeat_;
      stateId_ = other.stateId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Table Clone() {
      return new Table(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "RestaurantId" field.</summary>
    public const int RestaurantIdFieldNumber = 2;
    private int restaurantId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RestaurantId {
      get { return restaurantId_; }
      set {
        restaurantId_ = value;
      }
    }

    /// <summary>Field number for the "NumberOfSeat" field.</summary>
    public const int NumberOfSeatFieldNumber = 3;
    private int numberOfSeat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberOfSeat {
      get { return numberOfSeat_; }
      set {
        numberOfSeat_ = value;
      }
    }

    /// <summary>Field number for the "StateId" field.</summary>
    public const int StateIdFieldNumber = 4;
    private int stateId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StateId {
      get { return stateId_; }
      set {
        stateId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Table);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Table other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RestaurantId != other.RestaurantId) return false;
      if (NumberOfSeat != other.NumberOfSeat) return false;
      if (StateId != other.StateId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RestaurantId != 0) hash ^= RestaurantId.GetHashCode();
      if (NumberOfSeat != 0) hash ^= NumberOfSeat.GetHashCode();
      if (StateId != 0) hash ^= StateId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RestaurantId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RestaurantId);
      }
      if (NumberOfSeat != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NumberOfSeat);
      }
      if (StateId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RestaurantId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RestaurantId);
      }
      if (NumberOfSeat != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NumberOfSeat);
      }
      if (StateId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StateId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RestaurantId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RestaurantId);
      }
      if (NumberOfSeat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfSeat);
      }
      if (StateId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Table other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RestaurantId != 0) {
        RestaurantId = other.RestaurantId;
      }
      if (other.NumberOfSeat != 0) {
        NumberOfSeat = other.NumberOfSeat;
      }
      if (other.StateId != 0) {
        StateId = other.StateId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RestaurantId = input.ReadInt32();
            break;
          }
          case 24: {
            NumberOfSeat = input.ReadInt32();
            break;
          }
          case 32: {
            StateId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RestaurantId = input.ReadInt32();
            break;
          }
          case 24: {
            NumberOfSeat = input.ReadInt32();
            break;
          }
          case 32: {
            StateId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Tables : pb::IMessage<Tables>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Tables> _parser = new pb::MessageParser<Tables>(() => new Tables());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tables> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tables() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tables(Tables other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tables Clone() {
      return new Tables(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Protos.Message.Administrator.Table> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Protos.Message.Administrator.Table.Parser);
    private readonly pbc::RepeatedField<global::Protos.Message.Administrator.Table> values_ = new pbc::RepeatedField<global::Protos.Message.Administrator.Table>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Protos.Message.Administrator.Table> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tables);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tables other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tables other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RestaurantLanguage : pb::IMessage<RestaurantLanguage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RestaurantLanguage> _parser = new pb::MessageParser<RestaurantLanguage>(() => new RestaurantLanguage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestaurantLanguage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Protos.Message.Administrator.AdministratorReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantLanguage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantLanguage(RestaurantLanguage other) : this() {
      id_ = other.id_;
      restaurantId_ = other.restaurantId_;
      languageId_ = other.languageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantLanguage Clone() {
      return new RestaurantLanguage(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "RestaurantId" field.</summary>
    public const int RestaurantIdFieldNumber = 2;
    private int restaurantId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RestaurantId {
      get { return restaurantId_; }
      set {
        restaurantId_ = value;
      }
    }

    /// <summary>Field number for the "LanguageId" field.</summary>
    public const int LanguageIdFieldNumber = 3;
    private int languageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LanguageId {
      get { return languageId_; }
      set {
        languageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestaurantLanguage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestaurantLanguage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RestaurantId != other.RestaurantId) return false;
      if (LanguageId != other.LanguageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RestaurantId != 0) hash ^= RestaurantId.GetHashCode();
      if (LanguageId != 0) hash ^= LanguageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RestaurantId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RestaurantId);
      }
      if (LanguageId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LanguageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RestaurantId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RestaurantId);
      }
      if (LanguageId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LanguageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RestaurantId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RestaurantId);
      }
      if (LanguageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LanguageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestaurantLanguage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RestaurantId != 0) {
        RestaurantId = other.RestaurantId;
      }
      if (other.LanguageId != 0) {
        LanguageId = other.LanguageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RestaurantId = input.ReadInt32();
            break;
          }
          case 24: {
            LanguageId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RestaurantId = input.ReadInt32();
            break;
          }
          case 24: {
            LanguageId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
