/*************************************************************
** Class generated by CodeTrigger, Version 6.3.0.4
** This class was generated on 2020-08-01 3:54:27 AM
** Changes to this file may cause incorrect behaviour and will be lost if the code is regenerated
**************************************************************/
using System;
using System.Collections.Generic;
using System.Text;
using System.Windows;
using System.Windows.Input;
using System.Windows.Controls;
using System.Windows.Media;
using AAF.MVVMSample.ViewModel;
namespace AAF.MVVMSample.View
{
	/* To demonstrate this sample functionality, copy the following two lines 
	*  into the constructor of the MainWindow class in your WPF application
	*  after the 'InitializeComponent();' line
	*  AAF.MVVMSample.View.MainFrame sampleForm = new AAF.MVVMSample.View.MainFrame();
	*  sampleForm.ShowDialog();
	*  
	*  (Also, remember to run any generated sql script aginst the database if required, if you havent selected autoscripting)
	*  (For help with the samples, please see http://www.codetrigger.com/samples/)
	***************************************************************************************/
	public partial class MainFrame : Window
	{
		public MainFrame()
		{
			InitializeComponent();
			this.WindowState = WindowState.Maximized;
			var popupMessage = (Action<string>)(msg => MessageBox.Show(msg));
			var confirmMessage = (Func<string, string, bool>)((msg, capt) => MessageBox.Show(msg, capt, MessageBoxButton.YesNo) == MessageBoxResult.Yes);
			this.DataContext = new MainFrameViewModel(popupMessage, confirmMessage);
			
			/*this is a workaround to avoid that nasty little 'DeferRefresh' bug in DataGrid*/
			tabCtrl1.SelectionChanged += new System.Windows.Controls.SelectionChangedEventHandler(tabCtrl1_SelectionChanged);
		
		}
		
		private void tabCtrl1_SelectionChanged(object sender, System.Windows.Controls.SelectionChangedEventArgs e)
		{
			if(!(e.OriginalSource is TabControl))
				return;
		
			EnglishView daoEnglishView = FindChild<EnglishView>(this);
			CancelEdit(FindChild<DataGrid>(daoEnglishView));
			FrenchView daoFrenchView = FindChild<FrenchView>(this);
			CancelEdit(FindChild<DataGrid>(daoFrenchView));
			ItemView daoItemView = FindChild<ItemView>(this);
			CancelEdit(FindChild<DataGrid>(daoItemView));
			KeyView daoKeyView = FindChild<KeyView>(this);
			CancelEdit(FindChild<DataGrid>(daoKeyView));
			KeyTypeView daoKeyTypeView = FindChild<KeyTypeView>(this);
			CancelEdit(FindChild<DataGrid>(daoKeyTypeView));
			LanguageView daoLanguageView = FindChild<LanguageView>(this);
			CancelEdit(FindChild<DataGrid>(daoLanguageView));
			LocationView daoLocationView = FindChild<LocationView>(this);
			CancelEdit(FindChild<DataGrid>(daoLocationView));
			MenuView daoMenuView = FindChild<MenuView>(this);
			CancelEdit(FindChild<DataGrid>(daoMenuView));
			MenuItemView daoMenuItemView = FindChild<MenuItemView>(this);
			CancelEdit(FindChild<DataGrid>(daoMenuItemView));
			RestaurantView daoRestaurantView = FindChild<RestaurantView>(this);
			CancelEdit(FindChild<DataGrid>(daoRestaurantView));
			RestaurantLanguageView daoRestaurantLanguageView = FindChild<RestaurantLanguageView>(this);
			CancelEdit(FindChild<DataGrid>(daoRestaurantLanguageView));
			RestaurantLocationView daoRestaurantLocationView = FindChild<RestaurantLocationView>(this);
			CancelEdit(FindChild<DataGrid>(daoRestaurantLocationView));
			RestaurantMenuView daoRestaurantMenuView = FindChild<RestaurantMenuView>(this);
			CancelEdit(FindChild<DataGrid>(daoRestaurantMenuView));
			ScheduleView daoScheduleView = FindChild<ScheduleView>(this);
			CancelEdit(FindChild<DataGrid>(daoScheduleView));
			StateView daoStateView = FindChild<StateView>(this);
			CancelEdit(FindChild<DataGrid>(daoStateView));
			TableView daoTableView = FindChild<TableView>(this);
			CancelEdit(FindChild<DataGrid>(daoTableView));
			VietnameseView daoVietnameseView = FindChild<VietnameseView>(this);
			CancelEdit(FindChild<DataGrid>(daoVietnameseView));
			AppSettingView daoAppSettingView = FindChild<AppSettingView>(this);
			CancelEdit(FindChild<DataGrid>(daoAppSettingView));
			SpParameterView daoSpParameterView = FindChild<SpParameterView>(this);
			CancelEdit(FindChild<DataGrid>(daoSpParameterView));
			SpPropertyView daoSpPropertyView = FindChild<SpPropertyView>(this);
			CancelEdit(FindChild<DataGrid>(daoSpPropertyView));
			
		}
		
		private static void CancelEdit(DataGrid dataGrid)
		{
			if(dataGrid != null)
			{
				dataGrid.CancelEdit();
				dataGrid.CancelEdit();
			}
		}
		
		private static T FindChild<T>(DependencyObject parent) where T : DependencyObject
		{
			if(parent == null) return null;
			T foundChild = null;
			int childrenCount = VisualTreeHelper.GetChildrenCount(parent);
			for(int i=0; i<childrenCount; i++)
			{
				var child = VisualTreeHelper.GetChild(parent, i);
				T childType = child as T;
				if(childType == null)
				{
					foundChild = FindChild<T>(child);
					if(foundChild != null)
						break;
				}
				else
				{
					foundChild = (T)child;
					break;
				}
			}
			return foundChild;
		}
	}
}
