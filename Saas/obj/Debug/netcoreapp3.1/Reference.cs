// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/reference.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Saas.Entity.ReferenceData {

  /// <summary>Holder for reflection information generated from Protos/reference.proto</summary>
  public static partial class ReferenceReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/reference.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReferenceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZQcm90b3MvcmVmZXJlbmNlLnByb3RvEg1SZWZlcmVuY2VEYXRhInAKCEtl",
            "eVR5cGVzEi8KBnZhbHVlcxgBIAMoCzIfLlJlZmVyZW5jZURhdGEuS2V5VHlw",
            "ZXMuS2V5VHlwZRozCgdLZXlUeXBlEgoKAklkGAEgASgFEgwKBE5hbWUYAiAB",
            "KAkSDgoGTWF4TGVuGAMgASgFIlgKBlN0YXRlcxIrCgZ2YWx1ZXMYASADKAsy",
            "Gy5SZWZlcmVuY2VEYXRhLlN0YXRlcy5TdGF0ZRohCgVTdGF0ZRIKCgJJZBgB",
            "IAEoBRIMCgROYW1lGAIgASgJIo0BChJTdXBwb3J0ZWRMYW5ndWFnZXMSPgoG",
            "dmFsdWVzGAEgAygLMi4uUmVmZXJlbmNlRGF0YS5TdXBwb3J0ZWRMYW5ndWFn",
            "ZXMuQ29kZUxhbmd1YWdlGjcKDENvZGVMYW5ndWFnZRIKCgJJZBgBIAEoBRIM",
            "CgRDb2RlGAIgASgJEg0KBVZhbHVlGAMgASgJIkEKCkFwcFNldHRpbmcSCgoC",
            "SWQYASABKAUSDwoHTmFtZUtleRgCIAEoBRIWCg5EZXNjcmlwdGlvbktleRgD",
            "IAEoBSLAAQoOUmVmZXJlbmNlRGF0YXMSJQoGc3RhdGVzGAEgASgLMhUuUmVm",
            "ZXJlbmNlRGF0YS5TdGF0ZXMSNAoJbGFuZ3VhZ2VzGAIgASgLMiEuUmVmZXJl",
            "bmNlRGF0YS5TdXBwb3J0ZWRMYW5ndWFnZXMSKQoIa2V5VHlwZXMYAyABKAsy",
            "Fy5SZWZlcmVuY2VEYXRhLktleVR5cGVzEiYKA2FwcBgEIAEoCzIZLlJlZmVy",
            "ZW5jZURhdGEuQXBwU2V0dGluZ0IcqgIZU2Fhcy5FbnRpdHkuUmVmZXJlbmNl",
            "RGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.ReferenceData.KeyTypes), global::Saas.Entity.ReferenceData.KeyTypes.Parser, new[]{ "Values" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.ReferenceData.KeyTypes.Types.KeyType), global::Saas.Entity.ReferenceData.KeyTypes.Types.KeyType.Parser, new[]{ "Id", "Name", "MaxLen" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.ReferenceData.States), global::Saas.Entity.ReferenceData.States.Parser, new[]{ "Values" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.ReferenceData.States.Types.State), global::Saas.Entity.ReferenceData.States.Types.State.Parser, new[]{ "Id", "Name" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.ReferenceData.SupportedLanguages), global::Saas.Entity.ReferenceData.SupportedLanguages.Parser, new[]{ "Values" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.ReferenceData.SupportedLanguages.Types.CodeLanguage), global::Saas.Entity.ReferenceData.SupportedLanguages.Types.CodeLanguage.Parser, new[]{ "Id", "Code", "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.ReferenceData.AppSetting), global::Saas.Entity.ReferenceData.AppSetting.Parser, new[]{ "Id", "NameKey", "DescriptionKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.ReferenceData.ReferenceDatas), global::Saas.Entity.ReferenceData.ReferenceDatas.Parser, new[]{ "States", "Languages", "KeyTypes", "App" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class KeyTypes : pb::IMessage<KeyTypes> {
    private static readonly pb::MessageParser<KeyTypes> _parser = new pb::MessageParser<KeyTypes>(() => new KeyTypes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyTypes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.ReferenceData.ReferenceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyTypes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyTypes(KeyTypes other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyTypes Clone() {
      return new KeyTypes(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Saas.Entity.ReferenceData.KeyTypes.Types.KeyType> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Saas.Entity.ReferenceData.KeyTypes.Types.KeyType.Parser);
    private readonly pbc::RepeatedField<global::Saas.Entity.ReferenceData.KeyTypes.Types.KeyType> values_ = new pbc::RepeatedField<global::Saas.Entity.ReferenceData.KeyTypes.Types.KeyType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saas.Entity.ReferenceData.KeyTypes.Types.KeyType> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyTypes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyTypes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyTypes other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the KeyTypes message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class KeyType : pb::IMessage<KeyType> {
        private static readonly pb::MessageParser<KeyType> _parser = new pb::MessageParser<KeyType>(() => new KeyType());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<KeyType> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Saas.Entity.ReferenceData.KeyTypes.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeyType() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeyType(KeyType other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          maxLen_ = other.maxLen_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public KeyType Clone() {
          return new KeyType(this);
        }

        /// <summary>Field number for the "Id" field.</summary>
        public const int IdFieldNumber = 1;
        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "Name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "MaxLen" field.</summary>
        public const int MaxLenFieldNumber = 3;
        private int maxLen_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MaxLen {
          get { return maxLen_; }
          set {
            maxLen_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as KeyType);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(KeyType other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (MaxLen != other.MaxLen) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (MaxLen != 0) hash ^= MaxLen.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (MaxLen != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(MaxLen);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (MaxLen != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxLen);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(KeyType other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.MaxLen != 0) {
            MaxLen = other.MaxLen;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 24: {
                MaxLen = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class States : pb::IMessage<States> {
    private static readonly pb::MessageParser<States> _parser = new pb::MessageParser<States>(() => new States());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<States> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.ReferenceData.ReferenceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public States() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public States(States other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public States Clone() {
      return new States(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Saas.Entity.ReferenceData.States.Types.State> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Saas.Entity.ReferenceData.States.Types.State.Parser);
    private readonly pbc::RepeatedField<global::Saas.Entity.ReferenceData.States.Types.State> values_ = new pbc::RepeatedField<global::Saas.Entity.ReferenceData.States.Types.State>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saas.Entity.ReferenceData.States.Types.State> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as States);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(States other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(States other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the States message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class State : pb::IMessage<State> {
        private static readonly pb::MessageParser<State> _parser = new pb::MessageParser<State>(() => new State());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<State> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Saas.Entity.ReferenceData.States.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public State() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public State(State other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public State Clone() {
          return new State(this);
        }

        /// <summary>Field number for the "Id" field.</summary>
        public const int IdFieldNumber = 1;
        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "Name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as State);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(State other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(State other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class SupportedLanguages : pb::IMessage<SupportedLanguages> {
    private static readonly pb::MessageParser<SupportedLanguages> _parser = new pb::MessageParser<SupportedLanguages>(() => new SupportedLanguages());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SupportedLanguages> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.ReferenceData.ReferenceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupportedLanguages() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupportedLanguages(SupportedLanguages other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SupportedLanguages Clone() {
      return new SupportedLanguages(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Saas.Entity.ReferenceData.SupportedLanguages.Types.CodeLanguage> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Saas.Entity.ReferenceData.SupportedLanguages.Types.CodeLanguage.Parser);
    private readonly pbc::RepeatedField<global::Saas.Entity.ReferenceData.SupportedLanguages.Types.CodeLanguage> values_ = new pbc::RepeatedField<global::Saas.Entity.ReferenceData.SupportedLanguages.Types.CodeLanguage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saas.Entity.ReferenceData.SupportedLanguages.Types.CodeLanguage> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SupportedLanguages);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SupportedLanguages other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SupportedLanguages other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SupportedLanguages message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class CodeLanguage : pb::IMessage<CodeLanguage> {
        private static readonly pb::MessageParser<CodeLanguage> _parser = new pb::MessageParser<CodeLanguage>(() => new CodeLanguage());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CodeLanguage> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Saas.Entity.ReferenceData.SupportedLanguages.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CodeLanguage() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CodeLanguage(CodeLanguage other) : this() {
          id_ = other.id_;
          code_ = other.code_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CodeLanguage Clone() {
          return new CodeLanguage(this);
        }

        /// <summary>Field number for the "Id" field.</summary>
        public const int IdFieldNumber = 1;
        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "Code" field.</summary>
        public const int CodeFieldNumber = 2;
        private string code_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Code {
          get { return code_; }
          set {
            code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "Value" field.</summary>
        public const int ValueFieldNumber = 3;
        private string value_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CodeLanguage);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CodeLanguage other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Code != other.Code) return false;
          if (Value != other.Value) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (Code.Length != 0) hash ^= Code.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Id);
          }
          if (Code.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Code);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
          }
          if (Code.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
          }
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CodeLanguage other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.Code.Length != 0) {
            Code = other.Code;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadInt32();
                break;
              }
              case 18: {
                Code = input.ReadString();
                break;
              }
              case 26: {
                Value = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class AppSetting : pb::IMessage<AppSetting> {
    private static readonly pb::MessageParser<AppSetting> _parser = new pb::MessageParser<AppSetting>(() => new AppSetting());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppSetting> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.ReferenceData.ReferenceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppSetting() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppSetting(AppSetting other) : this() {
      id_ = other.id_;
      nameKey_ = other.nameKey_;
      descriptionKey_ = other.descriptionKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppSetting Clone() {
      return new AppSetting(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "NameKey" field.</summary>
    public const int NameKeyFieldNumber = 2;
    private int nameKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NameKey {
      get { return nameKey_; }
      set {
        nameKey_ = value;
      }
    }

    /// <summary>Field number for the "DescriptionKey" field.</summary>
    public const int DescriptionKeyFieldNumber = 3;
    private int descriptionKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DescriptionKey {
      get { return descriptionKey_; }
      set {
        descriptionKey_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppSetting);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppSetting other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (NameKey != other.NameKey) return false;
      if (DescriptionKey != other.DescriptionKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (NameKey != 0) hash ^= NameKey.GetHashCode();
      if (DescriptionKey != 0) hash ^= DescriptionKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (NameKey != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NameKey);
      }
      if (DescriptionKey != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DescriptionKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (NameKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NameKey);
      }
      if (DescriptionKey != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DescriptionKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppSetting other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.NameKey != 0) {
        NameKey = other.NameKey;
      }
      if (other.DescriptionKey != 0) {
        DescriptionKey = other.DescriptionKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            NameKey = input.ReadInt32();
            break;
          }
          case 24: {
            DescriptionKey = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReferenceDatas : pb::IMessage<ReferenceDatas> {
    private static readonly pb::MessageParser<ReferenceDatas> _parser = new pb::MessageParser<ReferenceDatas>(() => new ReferenceDatas());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReferenceDatas> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.ReferenceData.ReferenceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceDatas() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceDatas(ReferenceDatas other) : this() {
      states_ = other.states_ != null ? other.states_.Clone() : null;
      languages_ = other.languages_ != null ? other.languages_.Clone() : null;
      keyTypes_ = other.keyTypes_ != null ? other.keyTypes_.Clone() : null;
      app_ = other.app_ != null ? other.app_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceDatas Clone() {
      return new ReferenceDatas(this);
    }

    /// <summary>Field number for the "states" field.</summary>
    public const int StatesFieldNumber = 1;
    private global::Saas.Entity.ReferenceData.States states_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Entity.ReferenceData.States States {
      get { return states_; }
      set {
        states_ = value;
      }
    }

    /// <summary>Field number for the "languages" field.</summary>
    public const int LanguagesFieldNumber = 2;
    private global::Saas.Entity.ReferenceData.SupportedLanguages languages_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Entity.ReferenceData.SupportedLanguages Languages {
      get { return languages_; }
      set {
        languages_ = value;
      }
    }

    /// <summary>Field number for the "keyTypes" field.</summary>
    public const int KeyTypesFieldNumber = 3;
    private global::Saas.Entity.ReferenceData.KeyTypes keyTypes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Entity.ReferenceData.KeyTypes KeyTypes {
      get { return keyTypes_; }
      set {
        keyTypes_ = value;
      }
    }

    /// <summary>Field number for the "app" field.</summary>
    public const int AppFieldNumber = 4;
    private global::Saas.Entity.ReferenceData.AppSetting app_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Entity.ReferenceData.AppSetting App {
      get { return app_; }
      set {
        app_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReferenceDatas);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReferenceDatas other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(States, other.States)) return false;
      if (!object.Equals(Languages, other.Languages)) return false;
      if (!object.Equals(KeyTypes, other.KeyTypes)) return false;
      if (!object.Equals(App, other.App)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (states_ != null) hash ^= States.GetHashCode();
      if (languages_ != null) hash ^= Languages.GetHashCode();
      if (keyTypes_ != null) hash ^= KeyTypes.GetHashCode();
      if (app_ != null) hash ^= App.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (states_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(States);
      }
      if (languages_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Languages);
      }
      if (keyTypes_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(KeyTypes);
      }
      if (app_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(App);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (states_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(States);
      }
      if (languages_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Languages);
      }
      if (keyTypes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KeyTypes);
      }
      if (app_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(App);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReferenceDatas other) {
      if (other == null) {
        return;
      }
      if (other.states_ != null) {
        if (states_ == null) {
          States = new global::Saas.Entity.ReferenceData.States();
        }
        States.MergeFrom(other.States);
      }
      if (other.languages_ != null) {
        if (languages_ == null) {
          Languages = new global::Saas.Entity.ReferenceData.SupportedLanguages();
        }
        Languages.MergeFrom(other.Languages);
      }
      if (other.keyTypes_ != null) {
        if (keyTypes_ == null) {
          KeyTypes = new global::Saas.Entity.ReferenceData.KeyTypes();
        }
        KeyTypes.MergeFrom(other.KeyTypes);
      }
      if (other.app_ != null) {
        if (app_ == null) {
          App = new global::Saas.Entity.ReferenceData.AppSetting();
        }
        App.MergeFrom(other.App);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (states_ == null) {
              States = new global::Saas.Entity.ReferenceData.States();
            }
            input.ReadMessage(States);
            break;
          }
          case 18: {
            if (languages_ == null) {
              Languages = new global::Saas.Entity.ReferenceData.SupportedLanguages();
            }
            input.ReadMessage(Languages);
            break;
          }
          case 26: {
            if (keyTypes_ == null) {
              KeyTypes = new global::Saas.Entity.ReferenceData.KeyTypes();
            }
            input.ReadMessage(KeyTypes);
            break;
          }
          case 34: {
            if (app_ == null) {
              App = new global::Saas.Entity.ReferenceData.AppSetting();
            }
            input.ReadMessage(App);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
