// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Saas.gRPC {
  public static partial class RestaurantSvc
  {
    static readonly string __ServiceName = "Services.RestaurantSvc";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Value> __Marshaller_google_protobuf_Value = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Value.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Administrator.Restaurant> __Marshaller_Administrator_Restaurant = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Administrator.Restaurant.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Administrator.Restaurants> __Marshaller_Administrator_Restaurants = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Administrator.Restaurants.Parser));

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Restaurant> __Method_Get = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Restaurant>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_Restaurant);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Restaurants> __Method_Lookup = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Restaurants>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Lookup",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_Restaurants);

    static readonly grpc::Method<global::Saas.Message.Administrator.Restaurant, global::Google.Protobuf.WellKnownTypes.Value> __Method_Create = new grpc::Method<global::Saas.Message.Administrator.Restaurant, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_Administrator_Restaurant,
        __Marshaller_google_protobuf_Value);

    static readonly grpc::Method<global::Saas.Message.Administrator.Restaurant, global::Google.Protobuf.WellKnownTypes.Value> __Method_Update = new grpc::Method<global::Saas.Message.Administrator.Restaurant, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_Administrator_Restaurant,
        __Marshaller_google_protobuf_Value);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value> __Method_Delete = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_google_protobuf_Value,
        __Marshaller_google_protobuf_Value);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Saas.gRPC.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of RestaurantSvc</summary>
    [grpc::BindServiceMethod(typeof(RestaurantSvc), "BindService")]
    public abstract partial class RestaurantSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.Restaurant> Get(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.Restaurants> Lookup(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Create(global::Saas.Message.Administrator.Restaurant request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Update(global::Saas.Message.Administrator.Restaurant request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Delete(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(RestaurantSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_Lookup, serviceImpl.Lookup)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_Delete, serviceImpl.Delete).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RestaurantSvcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Get, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Restaurant>(serviceImpl.Get));
      serviceBinder.AddMethod(__Method_Lookup, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Restaurants>(serviceImpl.Lookup));
      serviceBinder.AddMethod(__Method_Create, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Saas.Message.Administrator.Restaurant, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Create));
      serviceBinder.AddMethod(__Method_Update, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Saas.Message.Administrator.Restaurant, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Update));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Delete));
    }

  }
  public static partial class TableSvc
  {
    static readonly string __ServiceName = "Services.TableSvc";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Value> __Marshaller_google_protobuf_Value = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Value.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Administrator.Table> __Marshaller_Administrator_Table = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Administrator.Table.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Administrator.Tables> __Marshaller_Administrator_Tables = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Administrator.Tables.Parser));

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Table> __Method_Get = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Table>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_Table);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Tables> __Method_GetByRestaurant = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Tables>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByRestaurant",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_Tables);

    static readonly grpc::Method<global::Saas.Message.Administrator.Table, global::Google.Protobuf.WellKnownTypes.Value> __Method_Create = new grpc::Method<global::Saas.Message.Administrator.Table, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_Administrator_Table,
        __Marshaller_google_protobuf_Value);

    static readonly grpc::Method<global::Saas.Message.Administrator.Table, global::Google.Protobuf.WellKnownTypes.Value> __Method_Update = new grpc::Method<global::Saas.Message.Administrator.Table, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_Administrator_Table,
        __Marshaller_google_protobuf_Value);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value> __Method_Delete = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_google_protobuf_Value,
        __Marshaller_google_protobuf_Value);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Saas.gRPC.ServiceReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of TableSvc</summary>
    [grpc::BindServiceMethod(typeof(TableSvc), "BindService")]
    public abstract partial class TableSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.Table> Get(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.Tables> GetByRestaurant(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Create(global::Saas.Message.Administrator.Table request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Update(global::Saas.Message.Administrator.Table request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Delete(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(TableSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_GetByRestaurant, serviceImpl.GetByRestaurant)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_Delete, serviceImpl.Delete).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TableSvcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Get, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Table>(serviceImpl.Get));
      serviceBinder.AddMethod(__Method_GetByRestaurant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Tables>(serviceImpl.GetByRestaurant));
      serviceBinder.AddMethod(__Method_Create, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Saas.Message.Administrator.Table, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Create));
      serviceBinder.AddMethod(__Method_Update, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Saas.Message.Administrator.Table, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Update));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Delete));
    }

  }
  public static partial class ItemSvc
  {
    static readonly string __ServiceName = "Services.ItemSvc";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Value> __Marshaller_google_protobuf_Value = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Value.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Administrator.Item> __Marshaller_Administrator_Item = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Administrator.Item.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Administrator.Items> __Marshaller_Administrator_Items = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Administrator.Items.Parser));

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Item> __Method_Get = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Item>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_Item);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Items> __Method_GetByRestaurant = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Items>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByRestaurant",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_Items);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Items> __Method_GetByRestaurantMenu = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Items>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByRestaurantMenu",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_Items);

    static readonly grpc::Method<global::Saas.Message.Administrator.Item, global::Google.Protobuf.WellKnownTypes.Value> __Method_Create = new grpc::Method<global::Saas.Message.Administrator.Item, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_Administrator_Item,
        __Marshaller_google_protobuf_Value);

    static readonly grpc::Method<global::Saas.Message.Administrator.Item, global::Google.Protobuf.WellKnownTypes.Value> __Method_Update = new grpc::Method<global::Saas.Message.Administrator.Item, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_Administrator_Item,
        __Marshaller_google_protobuf_Value);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Saas.gRPC.ServiceReflection.Descriptor.Services[2]; }
    }

    /// <summary>Base class for server-side implementations of ItemSvc</summary>
    [grpc::BindServiceMethod(typeof(ItemSvc), "BindService")]
    public abstract partial class ItemSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.Item> Get(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.Items> GetByRestaurant(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.Items> GetByRestaurantMenu(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Create(global::Saas.Message.Administrator.Item request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Update(global::Saas.Message.Administrator.Item request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ItemSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_GetByRestaurant, serviceImpl.GetByRestaurant)
          .AddMethod(__Method_GetByRestaurantMenu, serviceImpl.GetByRestaurantMenu)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ItemSvcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Get, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Item>(serviceImpl.Get));
      serviceBinder.AddMethod(__Method_GetByRestaurant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Items>(serviceImpl.GetByRestaurant));
      serviceBinder.AddMethod(__Method_GetByRestaurantMenu, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Items>(serviceImpl.GetByRestaurantMenu));
      serviceBinder.AddMethod(__Method_Create, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Saas.Message.Administrator.Item, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Create));
      serviceBinder.AddMethod(__Method_Update, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Saas.Message.Administrator.Item, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Update));
    }

  }
  public static partial class RestaurantMenuSvc
  {
    static readonly string __ServiceName = "Services.RestaurantMenuSvc";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Value> __Marshaller_google_protobuf_Value = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Value.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Administrator.RestaurantMenu> __Marshaller_Administrator_RestaurantMenu = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Administrator.RestaurantMenu.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Administrator.RestaurantMenus> __Marshaller_Administrator_RestaurantMenus = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Administrator.RestaurantMenus.Parser));

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.RestaurantMenu> __Method_Get = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.RestaurantMenu>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_RestaurantMenu);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.RestaurantMenus> __Method_GetByRestaurant = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.RestaurantMenus>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByRestaurant",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_RestaurantMenus);

    static readonly grpc::Method<global::Saas.Message.Administrator.RestaurantMenu, global::Google.Protobuf.WellKnownTypes.Value> __Method_Create = new grpc::Method<global::Saas.Message.Administrator.RestaurantMenu, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_Administrator_RestaurantMenu,
        __Marshaller_google_protobuf_Value);

    static readonly grpc::Method<global::Saas.Message.Administrator.RestaurantMenu, global::Google.Protobuf.WellKnownTypes.Value> __Method_Update = new grpc::Method<global::Saas.Message.Administrator.RestaurantMenu, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_Administrator_RestaurantMenu,
        __Marshaller_google_protobuf_Value);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value> __Method_Delete = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_google_protobuf_Value,
        __Marshaller_google_protobuf_Value);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Saas.gRPC.ServiceReflection.Descriptor.Services[3]; }
    }

    /// <summary>Base class for server-side implementations of RestaurantMenuSvc</summary>
    [grpc::BindServiceMethod(typeof(RestaurantMenuSvc), "BindService")]
    public abstract partial class RestaurantMenuSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.RestaurantMenu> Get(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.RestaurantMenus> GetByRestaurant(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Create(global::Saas.Message.Administrator.RestaurantMenu request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Update(global::Saas.Message.Administrator.RestaurantMenu request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Delete(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(RestaurantMenuSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_GetByRestaurant, serviceImpl.GetByRestaurant)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_Delete, serviceImpl.Delete).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RestaurantMenuSvcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Get, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.RestaurantMenu>(serviceImpl.Get));
      serviceBinder.AddMethod(__Method_GetByRestaurant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.RestaurantMenus>(serviceImpl.GetByRestaurant));
      serviceBinder.AddMethod(__Method_Create, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Saas.Message.Administrator.RestaurantMenu, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Create));
      serviceBinder.AddMethod(__Method_Update, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Saas.Message.Administrator.RestaurantMenu, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Update));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Delete));
    }

  }
  public static partial class MenuSvc
  {
    static readonly string __ServiceName = "Services.MenuSvc";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Value> __Marshaller_google_protobuf_Value = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Value.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Administrator.Menu> __Marshaller_Administrator_Menu = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Administrator.Menu.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Administrator.Menus> __Marshaller_Administrator_Menus = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Administrator.Menus.Parser));

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Menu> __Method_Get = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Menu>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_Menu);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Menus> __Method_GetByRestaurantMenu = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Menus>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByRestaurantMenu",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_Menus);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Menus> __Method_GetByRestaurant = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Menus>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByRestaurant",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_Menus);

    static readonly grpc::Method<global::Saas.Message.Administrator.Menu, global::Google.Protobuf.WellKnownTypes.Value> __Method_Create = new grpc::Method<global::Saas.Message.Administrator.Menu, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_Administrator_Menu,
        __Marshaller_google_protobuf_Value);

    static readonly grpc::Method<global::Saas.Message.Administrator.Menu, global::Google.Protobuf.WellKnownTypes.Value> __Method_Update = new grpc::Method<global::Saas.Message.Administrator.Menu, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_Administrator_Menu,
        __Marshaller_google_protobuf_Value);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value> __Method_Delete = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_google_protobuf_Value,
        __Marshaller_google_protobuf_Value);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Saas.gRPC.ServiceReflection.Descriptor.Services[4]; }
    }

    /// <summary>Base class for server-side implementations of MenuSvc</summary>
    [grpc::BindServiceMethod(typeof(MenuSvc), "BindService")]
    public abstract partial class MenuSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.Menu> Get(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.Menus> GetByRestaurantMenu(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.Menus> GetByRestaurant(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Create(global::Saas.Message.Administrator.Menu request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Update(global::Saas.Message.Administrator.Menu request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Delete(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MenuSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_GetByRestaurantMenu, serviceImpl.GetByRestaurantMenu)
          .AddMethod(__Method_GetByRestaurant, serviceImpl.GetByRestaurant)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_Delete, serviceImpl.Delete).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MenuSvcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Get, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Menu>(serviceImpl.Get));
      serviceBinder.AddMethod(__Method_GetByRestaurantMenu, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Menus>(serviceImpl.GetByRestaurantMenu));
      serviceBinder.AddMethod(__Method_GetByRestaurant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.Menus>(serviceImpl.GetByRestaurant));
      serviceBinder.AddMethod(__Method_Create, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Saas.Message.Administrator.Menu, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Create));
      serviceBinder.AddMethod(__Method_Update, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Saas.Message.Administrator.Menu, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Update));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Delete));
    }

  }
  public static partial class MenuItemSvc
  {
    static readonly string __ServiceName = "Services.MenuItemSvc";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Value> __Marshaller_google_protobuf_Value = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Value.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Administrator.MenuItem> __Marshaller_Administrator_MenuItem = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Administrator.MenuItem.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Administrator.MenuItems> __Marshaller_Administrator_MenuItems = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Administrator.MenuItems.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Administrator.MenuItemIds> __Marshaller_Administrator_MenuItemIds = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Administrator.MenuItemIds.Parser));

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.MenuItem> __Method_Get = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.MenuItem>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_MenuItem);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.MenuItems> __Method_GetByMenu = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.MenuItems>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByMenu",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_MenuItems);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.MenuItems> __Method_GetByItem = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.MenuItems>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByItem",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Administrator_MenuItems);

    static readonly grpc::Method<global::Saas.Message.Administrator.MenuItemIds, global::Saas.Message.Administrator.MenuItem> __Method_GetByMenuAndItem = new grpc::Method<global::Saas.Message.Administrator.MenuItemIds, global::Saas.Message.Administrator.MenuItem>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetByMenuAndItem",
        __Marshaller_Administrator_MenuItemIds,
        __Marshaller_Administrator_MenuItem);

    static readonly grpc::Method<global::Saas.Message.Administrator.MenuItem, global::Google.Protobuf.WellKnownTypes.Value> __Method_Create = new grpc::Method<global::Saas.Message.Administrator.MenuItem, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_Administrator_MenuItem,
        __Marshaller_google_protobuf_Value);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value> __Method_Delete = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_google_protobuf_Value,
        __Marshaller_google_protobuf_Value);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Saas.gRPC.ServiceReflection.Descriptor.Services[5]; }
    }

    /// <summary>Base class for server-side implementations of MenuItemSvc</summary>
    [grpc::BindServiceMethod(typeof(MenuItemSvc), "BindService")]
    public abstract partial class MenuItemSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.MenuItem> Get(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.MenuItems> GetByMenu(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.MenuItems> GetByItem(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Administrator.MenuItem> GetByMenuAndItem(global::Saas.Message.Administrator.MenuItemIds request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Create(global::Saas.Message.Administrator.MenuItem request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Value> Delete(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MenuItemSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Get, serviceImpl.Get)
          .AddMethod(__Method_GetByMenu, serviceImpl.GetByMenu)
          .AddMethod(__Method_GetByItem, serviceImpl.GetByItem)
          .AddMethod(__Method_GetByMenuAndItem, serviceImpl.GetByMenuAndItem)
          .AddMethod(__Method_Create, serviceImpl.Create)
          .AddMethod(__Method_Delete, serviceImpl.Delete).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, MenuItemSvcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Get, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.MenuItem>(serviceImpl.Get));
      serviceBinder.AddMethod(__Method_GetByMenu, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.MenuItems>(serviceImpl.GetByMenu));
      serviceBinder.AddMethod(__Method_GetByItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Administrator.MenuItems>(serviceImpl.GetByItem));
      serviceBinder.AddMethod(__Method_GetByMenuAndItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Saas.Message.Administrator.MenuItemIds, global::Saas.Message.Administrator.MenuItem>(serviceImpl.GetByMenuAndItem));
      serviceBinder.AddMethod(__Method_Create, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Saas.Message.Administrator.MenuItem, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Create));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Google.Protobuf.WellKnownTypes.Value>(serviceImpl.Delete));
    }

  }
  public static partial class AppDataSvc
  {
    static readonly string __ServiceName = "Services.AppDataSvc";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Value> __Marshaller_google_protobuf_Value = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Value.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Language.SupportedLanguages> __Marshaller_Language_SupportedLanguages = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Language.SupportedLanguages.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Reference.States> __Marshaller_Reference_States = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Reference.States.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Reference.KeyTypes> __Marshaller_Reference_KeyTypes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Reference.KeyTypes.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Reference.References> __Marshaller_Reference_References = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Reference.References.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Language.CodeLanguage> __Marshaller_Language_CodeLanguage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Language.CodeLanguage.Parser));
    static readonly grpc::Marshaller<global::Saas.Message.Language.Dictionary> __Marshaller_Language_Dictionary = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Saas.Message.Language.Dictionary.Parser));

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Language.SupportedLanguages> __Method_SupportedLanguages = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Language.SupportedLanguages>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SupportedLanguages",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Language_SupportedLanguages);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Reference.States> __Method_States = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Reference.States>(
        grpc::MethodType.Unary,
        __ServiceName,
        "States",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Reference_States);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Reference.KeyTypes> __Method_KeyTypes = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Reference.KeyTypes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "KeyTypes",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Reference_KeyTypes);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Reference.References> __Method_References = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Reference.References>(
        grpc::MethodType.Unary,
        __ServiceName,
        "References",
        __Marshaller_google_protobuf_Value,
        __Marshaller_Reference_References);

    static readonly grpc::Method<global::Saas.Message.Language.CodeLanguage, global::Saas.Message.Language.Dictionary> __Method_Dictionary = new grpc::Method<global::Saas.Message.Language.CodeLanguage, global::Saas.Message.Language.Dictionary>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Dictionary",
        __Marshaller_Language_CodeLanguage,
        __Marshaller_Language_Dictionary);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Saas.gRPC.ServiceReflection.Descriptor.Services[6]; }
    }

    /// <summary>Base class for server-side implementations of AppDataSvc</summary>
    [grpc::BindServiceMethod(typeof(AppDataSvc), "BindService")]
    public abstract partial class AppDataSvcBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Language.SupportedLanguages> SupportedLanguages(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Reference.States> States(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Reference.KeyTypes> KeyTypes(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Reference.References> References(global::Google.Protobuf.WellKnownTypes.Value request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Saas.Message.Language.Dictionary> Dictionary(global::Saas.Message.Language.CodeLanguage request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(AppDataSvcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SupportedLanguages, serviceImpl.SupportedLanguages)
          .AddMethod(__Method_States, serviceImpl.States)
          .AddMethod(__Method_KeyTypes, serviceImpl.KeyTypes)
          .AddMethod(__Method_References, serviceImpl.References)
          .AddMethod(__Method_Dictionary, serviceImpl.Dictionary).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AppDataSvcBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SupportedLanguages, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Language.SupportedLanguages>(serviceImpl.SupportedLanguages));
      serviceBinder.AddMethod(__Method_States, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Reference.States>(serviceImpl.States));
      serviceBinder.AddMethod(__Method_KeyTypes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Reference.KeyTypes>(serviceImpl.KeyTypes));
      serviceBinder.AddMethod(__Method_References, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Value, global::Saas.Message.Reference.References>(serviceImpl.References));
      serviceBinder.AddMethod(__Method_Dictionary, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Saas.Message.Language.CodeLanguage, global::Saas.Message.Language.Dictionary>(serviceImpl.Dictionary));
    }

  }
}
#endregion
