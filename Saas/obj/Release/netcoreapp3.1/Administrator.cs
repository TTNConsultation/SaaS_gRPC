// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/administrator.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Saas.Entity.Administrator {

  /// <summary>Holder for reflection information generated from Protos/administrator.proto</summary>
  public static partial class AdministratorReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/administrator.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AdministratorReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpQcm90b3MvYWRtaW5pc3RyYXRvci5wcm90bxINQWRtaW5pc3RyYXRvchoQ",
            "UHJvdG9zL2Vyci5wcm90byL0AQoLUmVzdGF1cmFudHMSNQoGdmFsdWVzGAEg",
            "AygLMiUuQWRtaW5pc3RyYXRvci5SZXN0YXVyYW50cy5SZXN0YXVyYW50Gq0B",
            "CgpSZXN0YXVyYW50EgoKAmlkGAEgASgFEgwKBG5hbWUYAiABKAkSDQoFcGhv",
            "bmUYAyABKAkSDwoHYWRkcmVzcxgEIAEoCRIMCgRjaXR5GAUgASgJEg0KBXN0",
            "YXRlGAYgASgJEgsKA3ppcBgHIAEoCRIPCgdjb3VudHJ5GAggASgJEgsKA2xh",
            "dBgJIAEoCRIMCgRsb25nGAogASgJEg8KB3N0YXRlSWQYCyABKAUijQEKBUl0",
            "ZW1zEikKBnZhbHVlcxgBIAMoCzIZLkFkbWluaXN0cmF0b3IuSXRlbXMuSXRl",
            "bRpZCgRJdGVtEgoKAmlkGAEgASgFEhQKDHJlc3RhdXJhbnRJZBgCIAEoBRIN",
            "CgVwcmljZRgDIAEoAhIPCgdpc0V4dHJhGAQgASgIEg8KB3N0YXRlSWQYBSAB",
            "KAUilQEKD1Jlc3RhdXJhbnRNZW51cxI9CgZ2YWx1ZXMYASADKAsyLS5BZG1p",
            "bmlzdHJhdG9yLlJlc3RhdXJhbnRNZW51cy5SZXN0YXVyYW50TWVudRpDCg5S",
            "ZXN0YXVyYW50TWVudRIKCgJpZBgBIAEoBRIUCgxyZXN0YXVyYW50SWQYAiAB",
            "KAUSDwoHc3RhdGVJZBgDIAEoBSKcAQoFTWVudXMSKQoGdmFsdWVzGAEgAygL",
            "MhkuQWRtaW5pc3RyYXRvci5NZW51cy5NZW51GmgKBE1lbnUSCgoCaWQYASAB",
            "KAUSGAoQcmVzdGF1cmFudG1lbnVJZBgCIAEoBRINCgVwcmljZRgDIAEoAhIa",
            "ChJ1c2VJdGVtRGVzY3JpcHRpb24YBCABKAgSDwoHc3RhdGVJZBgFIAEoBSKI",
            "AQoJTWVudUl0ZW1zEjEKBnZhbHVlcxgBIAMoCzIhLkFkbWluaXN0cmF0b3Iu",
            "TWVudUl0ZW1zLk1lbnVJdGVtGkgKCE1lbnVJdGVtEgoKAmlkGAEgASgFEg4K",
            "Bm1lbnVJZBgCIAEoBRIOCgZpdGVtSWQYAyABKAUSEAoIcXVhbnRpdHkYBCAB",
            "KAUiLQoLTWVudUl0ZW1JZHMSDgoGbWVudUlkGAEgASgFEg4KBml0ZW1JZBgC",
            "IAEoBSKHAQoGVGFibGVzEisKBnZhbHVlcxgBIAMoCzIbLkFkbWluaXN0cmF0",
            "b3IuVGFibGVzLlRhYmxlGlAKBVRhYmxlEgoKAmlkGAEgASgFEhQKDHJlc3Rh",
            "dXJhbnRJZBgCIAEoBRIUCgxudW1iZXJPZlNlYXQYAyABKAUSDwoHc3RhdGVJ",
            "ZBgEIAEoBSJKChJSZXN0YXVyYW50TGFuZ3VhZ2USCgoCaWQYASABKAUSFAoM",
            "cmVzdGF1cmFudElkGAIgASgFEhIKCmxhbmd1YWdlSWQYAyABKAUi4wIKCU9r",
            "TWVzc2FnZRIRCglpZE1lc3NhZ2UYASABKAUSCgoCb3AYAiABKAkSHQoVZnVs",
            "bE5hbWVSZXR1cm5PYmplY3RzGAMgASgJEjIKDnJlc3RhdXJhbnRPYmpzGAQg",
            "ASgLMhouQWRtaW5pc3RyYXRvci5SZXN0YXVyYW50cxImCghpdGVtT2JqcxgF",
            "IAEoCzIULkFkbWluaXN0cmF0b3IuSXRlbXMSOgoScmVzdGF1cmFudE1lbnVP",
            "YmpzGAYgASgLMh4uQWRtaW5pc3RyYXRvci5SZXN0YXVyYW50TWVudXMSJgoI",
            "bWVudU9ianMYByABKAsyFC5BZG1pbmlzdHJhdG9yLk1lbnVzEi4KDG1lbnVJ",
            "dGVtT2JqcxgIIAEoCzIYLkFkbWluaXN0cmF0b3IuTWVudUl0ZW1zEigKCXRh",
            "YmxlT2JqcxgJIAEoCzIVLkFkbWluaXN0cmF0b3IuVGFibGVzIlIKDVJldHVy",
            "bkNhcnJpZXISGwoFZXJyb3IYASABKAsyDC5FcnIuTWVzc2FnZRIkCgJvaxgC",
            "IAEoCzIYLkFkbWluaXN0cmF0b3IuT2tNZXNzYWdlQhyqAhlTYWFzLkVudGl0",
            "eS5BZG1pbmlzdHJhdG9yYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Saas.Err.ErrReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.Restaurants), global::Saas.Entity.Administrator.Restaurants.Parser, new[]{ "Values" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.Restaurants.Types.Restaurant), global::Saas.Entity.Administrator.Restaurants.Types.Restaurant.Parser, new[]{ "Id", "Name", "Phone", "Address", "City", "State", "Zip", "Country", "Lat", "Long", "StateId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.Items), global::Saas.Entity.Administrator.Items.Parser, new[]{ "Values" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.Items.Types.Item), global::Saas.Entity.Administrator.Items.Types.Item.Parser, new[]{ "Id", "RestaurantId", "Price", "IsExtra", "StateId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.RestaurantMenus), global::Saas.Entity.Administrator.RestaurantMenus.Parser, new[]{ "Values" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.RestaurantMenus.Types.RestaurantMenu), global::Saas.Entity.Administrator.RestaurantMenus.Types.RestaurantMenu.Parser, new[]{ "Id", "RestaurantId", "StateId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.Menus), global::Saas.Entity.Administrator.Menus.Parser, new[]{ "Values" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.Menus.Types.Menu), global::Saas.Entity.Administrator.Menus.Types.Menu.Parser, new[]{ "Id", "RestaurantmenuId", "Price", "UseItemDescription", "StateId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.MenuItems), global::Saas.Entity.Administrator.MenuItems.Parser, new[]{ "Values" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.MenuItems.Types.MenuItem), global::Saas.Entity.Administrator.MenuItems.Types.MenuItem.Parser, new[]{ "Id", "MenuId", "ItemId", "Quantity" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.MenuItemIds), global::Saas.Entity.Administrator.MenuItemIds.Parser, new[]{ "MenuId", "ItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.Tables), global::Saas.Entity.Administrator.Tables.Parser, new[]{ "Values" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.Tables.Types.Table), global::Saas.Entity.Administrator.Tables.Types.Table.Parser, new[]{ "Id", "RestaurantId", "NumberOfSeat", "StateId" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.RestaurantLanguage), global::Saas.Entity.Administrator.RestaurantLanguage.Parser, new[]{ "Id", "RestaurantId", "LanguageId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.OkMessage), global::Saas.Entity.Administrator.OkMessage.Parser, new[]{ "IdMessage", "Op", "FullNameReturnObjects", "RestaurantObjs", "ItemObjs", "RestaurantMenuObjs", "MenuObjs", "MenuItemObjs", "TableObjs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Entity.Administrator.ReturnCarrier), global::Saas.Entity.Administrator.ReturnCarrier.Parser, new[]{ "Error", "Ok" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Restaurants : pb::IMessage<Restaurants> {
    private static readonly pb::MessageParser<Restaurants> _parser = new pb::MessageParser<Restaurants>(() => new Restaurants());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Restaurants> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.Administrator.AdministratorReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Restaurants() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Restaurants(Restaurants other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Restaurants Clone() {
      return new Restaurants(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Saas.Entity.Administrator.Restaurants.Types.Restaurant> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Saas.Entity.Administrator.Restaurants.Types.Restaurant.Parser);
    private readonly pbc::RepeatedField<global::Saas.Entity.Administrator.Restaurants.Types.Restaurant> values_ = new pbc::RepeatedField<global::Saas.Entity.Administrator.Restaurants.Types.Restaurant>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saas.Entity.Administrator.Restaurants.Types.Restaurant> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Restaurants);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Restaurants other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Restaurants other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Restaurants message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Restaurant : pb::IMessage<Restaurant> {
        private static readonly pb::MessageParser<Restaurant> _parser = new pb::MessageParser<Restaurant>(() => new Restaurant());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Restaurant> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Saas.Entity.Administrator.Restaurants.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Restaurant() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Restaurant(Restaurant other) : this() {
          id_ = other.id_;
          name_ = other.name_;
          phone_ = other.phone_;
          address_ = other.address_;
          city_ = other.city_;
          state_ = other.state_;
          zip_ = other.zip_;
          country_ = other.country_;
          lat_ = other.lat_;
          long_ = other.long_;
          stateId_ = other.stateId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Restaurant Clone() {
          return new Restaurant(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "phone" field.</summary>
        public const int PhoneFieldNumber = 3;
        private string phone_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Phone {
          get { return phone_; }
          set {
            phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 4;
        private string address_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Address {
          get { return address_; }
          set {
            address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "city" field.</summary>
        public const int CityFieldNumber = 5;
        private string city_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string City {
          get { return city_; }
          set {
            city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 6;
        private string state_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string State {
          get { return state_; }
          set {
            state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "zip" field.</summary>
        public const int ZipFieldNumber = 7;
        private string zip_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Zip {
          get { return zip_; }
          set {
            zip_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "country" field.</summary>
        public const int CountryFieldNumber = 8;
        private string country_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Country {
          get { return country_; }
          set {
            country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "lat" field.</summary>
        public const int LatFieldNumber = 9;
        private string lat_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Lat {
          get { return lat_; }
          set {
            lat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "long" field.</summary>
        public const int LongFieldNumber = 10;
        private string long_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Long {
          get { return long_; }
          set {
            long_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "stateId" field.</summary>
        public const int StateIdFieldNumber = 11;
        private int stateId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int StateId {
          get { return stateId_; }
          set {
            stateId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Restaurant);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Restaurant other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (Name != other.Name) return false;
          if (Phone != other.Phone) return false;
          if (Address != other.Address) return false;
          if (City != other.City) return false;
          if (State != other.State) return false;
          if (Zip != other.Zip) return false;
          if (Country != other.Country) return false;
          if (Lat != other.Lat) return false;
          if (Long != other.Long) return false;
          if (StateId != other.StateId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Phone.Length != 0) hash ^= Phone.GetHashCode();
          if (Address.Length != 0) hash ^= Address.GetHashCode();
          if (City.Length != 0) hash ^= City.GetHashCode();
          if (State.Length != 0) hash ^= State.GetHashCode();
          if (Zip.Length != 0) hash ^= Zip.GetHashCode();
          if (Country.Length != 0) hash ^= Country.GetHashCode();
          if (Lat.Length != 0) hash ^= Lat.GetHashCode();
          if (Long.Length != 0) hash ^= Long.GetHashCode();
          if (StateId != 0) hash ^= StateId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Id);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (Phone.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Phone);
          }
          if (Address.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Address);
          }
          if (City.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(City);
          }
          if (State.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(State);
          }
          if (Zip.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Zip);
          }
          if (Country.Length != 0) {
            output.WriteRawTag(66);
            output.WriteString(Country);
          }
          if (Lat.Length != 0) {
            output.WriteRawTag(74);
            output.WriteString(Lat);
          }
          if (Long.Length != 0) {
            output.WriteRawTag(82);
            output.WriteString(Long);
          }
          if (StateId != 0) {
            output.WriteRawTag(88);
            output.WriteInt32(StateId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Phone.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
          }
          if (Address.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
          }
          if (City.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
          }
          if (State.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
          }
          if (Zip.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Zip);
          }
          if (Country.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
          }
          if (Lat.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Lat);
          }
          if (Long.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Long);
          }
          if (StateId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Restaurant other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Phone.Length != 0) {
            Phone = other.Phone;
          }
          if (other.Address.Length != 0) {
            Address = other.Address;
          }
          if (other.City.Length != 0) {
            City = other.City;
          }
          if (other.State.Length != 0) {
            State = other.State;
          }
          if (other.Zip.Length != 0) {
            Zip = other.Zip;
          }
          if (other.Country.Length != 0) {
            Country = other.Country;
          }
          if (other.Lat.Length != 0) {
            Lat = other.Lat;
          }
          if (other.Long.Length != 0) {
            Long = other.Long;
          }
          if (other.StateId != 0) {
            StateId = other.StateId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
              case 26: {
                Phone = input.ReadString();
                break;
              }
              case 34: {
                Address = input.ReadString();
                break;
              }
              case 42: {
                City = input.ReadString();
                break;
              }
              case 50: {
                State = input.ReadString();
                break;
              }
              case 58: {
                Zip = input.ReadString();
                break;
              }
              case 66: {
                Country = input.ReadString();
                break;
              }
              case 74: {
                Lat = input.ReadString();
                break;
              }
              case 82: {
                Long = input.ReadString();
                break;
              }
              case 88: {
                StateId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Items : pb::IMessage<Items> {
    private static readonly pb::MessageParser<Items> _parser = new pb::MessageParser<Items>(() => new Items());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Items> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.Administrator.AdministratorReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Items() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Items(Items other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Items Clone() {
      return new Items(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Saas.Entity.Administrator.Items.Types.Item> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Saas.Entity.Administrator.Items.Types.Item.Parser);
    private readonly pbc::RepeatedField<global::Saas.Entity.Administrator.Items.Types.Item> values_ = new pbc::RepeatedField<global::Saas.Entity.Administrator.Items.Types.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saas.Entity.Administrator.Items.Types.Item> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Items);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Items other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Items other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Items message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Item : pb::IMessage<Item> {
        private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Item> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Saas.Entity.Administrator.Items.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item(Item other) : this() {
          id_ = other.id_;
          restaurantId_ = other.restaurantId_;
          price_ = other.price_;
          isExtra_ = other.isExtra_;
          stateId_ = other.stateId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item Clone() {
          return new Item(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "restaurantId" field.</summary>
        public const int RestaurantIdFieldNumber = 2;
        private int restaurantId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RestaurantId {
          get { return restaurantId_; }
          set {
            restaurantId_ = value;
          }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 3;
        private float price_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Price {
          get { return price_; }
          set {
            price_ = value;
          }
        }

        /// <summary>Field number for the "isExtra" field.</summary>
        public const int IsExtraFieldNumber = 4;
        private bool isExtra_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsExtra {
          get { return isExtra_; }
          set {
            isExtra_ = value;
          }
        }

        /// <summary>Field number for the "stateId" field.</summary>
        public const int StateIdFieldNumber = 5;
        private int stateId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int StateId {
          get { return stateId_; }
          set {
            stateId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Item);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Item other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (RestaurantId != other.RestaurantId) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Price, other.Price)) return false;
          if (IsExtra != other.IsExtra) return false;
          if (StateId != other.StateId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (RestaurantId != 0) hash ^= RestaurantId.GetHashCode();
          if (Price != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Price);
          if (IsExtra != false) hash ^= IsExtra.GetHashCode();
          if (StateId != 0) hash ^= StateId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Id);
          }
          if (RestaurantId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(RestaurantId);
          }
          if (Price != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(Price);
          }
          if (IsExtra != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsExtra);
          }
          if (StateId != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(StateId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
          }
          if (RestaurantId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(RestaurantId);
          }
          if (Price != 0F) {
            size += 1 + 4;
          }
          if (IsExtra != false) {
            size += 1 + 1;
          }
          if (StateId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Item other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.RestaurantId != 0) {
            RestaurantId = other.RestaurantId;
          }
          if (other.Price != 0F) {
            Price = other.Price;
          }
          if (other.IsExtra != false) {
            IsExtra = other.IsExtra;
          }
          if (other.StateId != 0) {
            StateId = other.StateId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadInt32();
                break;
              }
              case 16: {
                RestaurantId = input.ReadInt32();
                break;
              }
              case 29: {
                Price = input.ReadFloat();
                break;
              }
              case 32: {
                IsExtra = input.ReadBool();
                break;
              }
              case 40: {
                StateId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class RestaurantMenus : pb::IMessage<RestaurantMenus> {
    private static readonly pb::MessageParser<RestaurantMenus> _parser = new pb::MessageParser<RestaurantMenus>(() => new RestaurantMenus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestaurantMenus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.Administrator.AdministratorReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantMenus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantMenus(RestaurantMenus other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantMenus Clone() {
      return new RestaurantMenus(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Saas.Entity.Administrator.RestaurantMenus.Types.RestaurantMenu> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Saas.Entity.Administrator.RestaurantMenus.Types.RestaurantMenu.Parser);
    private readonly pbc::RepeatedField<global::Saas.Entity.Administrator.RestaurantMenus.Types.RestaurantMenu> values_ = new pbc::RepeatedField<global::Saas.Entity.Administrator.RestaurantMenus.Types.RestaurantMenu>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saas.Entity.Administrator.RestaurantMenus.Types.RestaurantMenu> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestaurantMenus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestaurantMenus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestaurantMenus other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RestaurantMenus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class RestaurantMenu : pb::IMessage<RestaurantMenu> {
        private static readonly pb::MessageParser<RestaurantMenu> _parser = new pb::MessageParser<RestaurantMenu>(() => new RestaurantMenu());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RestaurantMenu> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Saas.Entity.Administrator.RestaurantMenus.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RestaurantMenu() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RestaurantMenu(RestaurantMenu other) : this() {
          id_ = other.id_;
          restaurantId_ = other.restaurantId_;
          stateId_ = other.stateId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RestaurantMenu Clone() {
          return new RestaurantMenu(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "restaurantId" field.</summary>
        public const int RestaurantIdFieldNumber = 2;
        private int restaurantId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RestaurantId {
          get { return restaurantId_; }
          set {
            restaurantId_ = value;
          }
        }

        /// <summary>Field number for the "stateId" field.</summary>
        public const int StateIdFieldNumber = 3;
        private int stateId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int StateId {
          get { return stateId_; }
          set {
            stateId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RestaurantMenu);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RestaurantMenu other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (RestaurantId != other.RestaurantId) return false;
          if (StateId != other.StateId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (RestaurantId != 0) hash ^= RestaurantId.GetHashCode();
          if (StateId != 0) hash ^= StateId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Id);
          }
          if (RestaurantId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(RestaurantId);
          }
          if (StateId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(StateId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
          }
          if (RestaurantId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(RestaurantId);
          }
          if (StateId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RestaurantMenu other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.RestaurantId != 0) {
            RestaurantId = other.RestaurantId;
          }
          if (other.StateId != 0) {
            StateId = other.StateId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadInt32();
                break;
              }
              case 16: {
                RestaurantId = input.ReadInt32();
                break;
              }
              case 24: {
                StateId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Menus : pb::IMessage<Menus> {
    private static readonly pb::MessageParser<Menus> _parser = new pb::MessageParser<Menus>(() => new Menus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Menus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.Administrator.AdministratorReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Menus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Menus(Menus other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Menus Clone() {
      return new Menus(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Saas.Entity.Administrator.Menus.Types.Menu> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Saas.Entity.Administrator.Menus.Types.Menu.Parser);
    private readonly pbc::RepeatedField<global::Saas.Entity.Administrator.Menus.Types.Menu> values_ = new pbc::RepeatedField<global::Saas.Entity.Administrator.Menus.Types.Menu>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saas.Entity.Administrator.Menus.Types.Menu> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Menus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Menus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Menus other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Menus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Menu : pb::IMessage<Menu> {
        private static readonly pb::MessageParser<Menu> _parser = new pb::MessageParser<Menu>(() => new Menu());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Menu> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Saas.Entity.Administrator.Menus.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Menu() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Menu(Menu other) : this() {
          id_ = other.id_;
          restaurantmenuId_ = other.restaurantmenuId_;
          price_ = other.price_;
          useItemDescription_ = other.useItemDescription_;
          stateId_ = other.stateId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Menu Clone() {
          return new Menu(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "restaurantmenuId" field.</summary>
        public const int RestaurantmenuIdFieldNumber = 2;
        private int restaurantmenuId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RestaurantmenuId {
          get { return restaurantmenuId_; }
          set {
            restaurantmenuId_ = value;
          }
        }

        /// <summary>Field number for the "price" field.</summary>
        public const int PriceFieldNumber = 3;
        private float price_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Price {
          get { return price_; }
          set {
            price_ = value;
          }
        }

        /// <summary>Field number for the "useItemDescription" field.</summary>
        public const int UseItemDescriptionFieldNumber = 4;
        private bool useItemDescription_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool UseItemDescription {
          get { return useItemDescription_; }
          set {
            useItemDescription_ = value;
          }
        }

        /// <summary>Field number for the "stateId" field.</summary>
        public const int StateIdFieldNumber = 5;
        private int stateId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int StateId {
          get { return stateId_; }
          set {
            stateId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Menu);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Menu other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (RestaurantmenuId != other.RestaurantmenuId) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Price, other.Price)) return false;
          if (UseItemDescription != other.UseItemDescription) return false;
          if (StateId != other.StateId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (RestaurantmenuId != 0) hash ^= RestaurantmenuId.GetHashCode();
          if (Price != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Price);
          if (UseItemDescription != false) hash ^= UseItemDescription.GetHashCode();
          if (StateId != 0) hash ^= StateId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Id);
          }
          if (RestaurantmenuId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(RestaurantmenuId);
          }
          if (Price != 0F) {
            output.WriteRawTag(29);
            output.WriteFloat(Price);
          }
          if (UseItemDescription != false) {
            output.WriteRawTag(32);
            output.WriteBool(UseItemDescription);
          }
          if (StateId != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(StateId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
          }
          if (RestaurantmenuId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(RestaurantmenuId);
          }
          if (Price != 0F) {
            size += 1 + 4;
          }
          if (UseItemDescription != false) {
            size += 1 + 1;
          }
          if (StateId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Menu other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.RestaurantmenuId != 0) {
            RestaurantmenuId = other.RestaurantmenuId;
          }
          if (other.Price != 0F) {
            Price = other.Price;
          }
          if (other.UseItemDescription != false) {
            UseItemDescription = other.UseItemDescription;
          }
          if (other.StateId != 0) {
            StateId = other.StateId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadInt32();
                break;
              }
              case 16: {
                RestaurantmenuId = input.ReadInt32();
                break;
              }
              case 29: {
                Price = input.ReadFloat();
                break;
              }
              case 32: {
                UseItemDescription = input.ReadBool();
                break;
              }
              case 40: {
                StateId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class MenuItems : pb::IMessage<MenuItems> {
    private static readonly pb::MessageParser<MenuItems> _parser = new pb::MessageParser<MenuItems>(() => new MenuItems());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MenuItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.Administrator.AdministratorReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItems(MenuItems other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItems Clone() {
      return new MenuItems(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Saas.Entity.Administrator.MenuItems.Types.MenuItem> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Saas.Entity.Administrator.MenuItems.Types.MenuItem.Parser);
    private readonly pbc::RepeatedField<global::Saas.Entity.Administrator.MenuItems.Types.MenuItem> values_ = new pbc::RepeatedField<global::Saas.Entity.Administrator.MenuItems.Types.MenuItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saas.Entity.Administrator.MenuItems.Types.MenuItem> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MenuItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MenuItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MenuItems other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MenuItems message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class MenuItem : pb::IMessage<MenuItem> {
        private static readonly pb::MessageParser<MenuItem> _parser = new pb::MessageParser<MenuItem>(() => new MenuItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MenuItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Saas.Entity.Administrator.MenuItems.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MenuItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MenuItem(MenuItem other) : this() {
          id_ = other.id_;
          menuId_ = other.menuId_;
          itemId_ = other.itemId_;
          quantity_ = other.quantity_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MenuItem Clone() {
          return new MenuItem(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "menuId" field.</summary>
        public const int MenuIdFieldNumber = 2;
        private int menuId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MenuId {
          get { return menuId_; }
          set {
            menuId_ = value;
          }
        }

        /// <summary>Field number for the "itemId" field.</summary>
        public const int ItemIdFieldNumber = 3;
        private int itemId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int ItemId {
          get { return itemId_; }
          set {
            itemId_ = value;
          }
        }

        /// <summary>Field number for the "quantity" field.</summary>
        public const int QuantityFieldNumber = 4;
        private int quantity_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Quantity {
          get { return quantity_; }
          set {
            quantity_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MenuItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MenuItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (MenuId != other.MenuId) return false;
          if (ItemId != other.ItemId) return false;
          if (Quantity != other.Quantity) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (MenuId != 0) hash ^= MenuId.GetHashCode();
          if (ItemId != 0) hash ^= ItemId.GetHashCode();
          if (Quantity != 0) hash ^= Quantity.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Id);
          }
          if (MenuId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(MenuId);
          }
          if (ItemId != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(ItemId);
          }
          if (Quantity != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(Quantity);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
          }
          if (MenuId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MenuId);
          }
          if (ItemId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
          }
          if (Quantity != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MenuItem other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.MenuId != 0) {
            MenuId = other.MenuId;
          }
          if (other.ItemId != 0) {
            ItemId = other.ItemId;
          }
          if (other.Quantity != 0) {
            Quantity = other.Quantity;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadInt32();
                break;
              }
              case 16: {
                MenuId = input.ReadInt32();
                break;
              }
              case 24: {
                ItemId = input.ReadInt32();
                break;
              }
              case 32: {
                Quantity = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class MenuItemIds : pb::IMessage<MenuItemIds> {
    private static readonly pb::MessageParser<MenuItemIds> _parser = new pb::MessageParser<MenuItemIds>(() => new MenuItemIds());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MenuItemIds> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.Administrator.AdministratorReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItemIds() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItemIds(MenuItemIds other) : this() {
      menuId_ = other.menuId_;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MenuItemIds Clone() {
      return new MenuItemIds(this);
    }

    /// <summary>Field number for the "menuId" field.</summary>
    public const int MenuIdFieldNumber = 1;
    private int menuId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MenuId {
      get { return menuId_; }
      set {
        menuId_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private int itemId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MenuItemIds);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MenuItemIds other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MenuId != other.MenuId) return false;
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MenuId != 0) hash ^= MenuId.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MenuId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MenuId);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MenuId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MenuId);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MenuItemIds other) {
      if (other == null) {
        return;
      }
      if (other.MenuId != 0) {
        MenuId = other.MenuId;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MenuId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Tables : pb::IMessage<Tables> {
    private static readonly pb::MessageParser<Tables> _parser = new pb::MessageParser<Tables>(() => new Tables());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tables> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.Administrator.AdministratorReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tables() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tables(Tables other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tables Clone() {
      return new Tables(this);
    }

    /// <summary>Field number for the "values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Saas.Entity.Administrator.Tables.Types.Table> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Saas.Entity.Administrator.Tables.Types.Table.Parser);
    private readonly pbc::RepeatedField<global::Saas.Entity.Administrator.Tables.Types.Table> values_ = new pbc::RepeatedField<global::Saas.Entity.Administrator.Tables.Types.Table>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saas.Entity.Administrator.Tables.Types.Table> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tables);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tables other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tables other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Tables message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Table : pb::IMessage<Table> {
        private static readonly pb::MessageParser<Table> _parser = new pb::MessageParser<Table>(() => new Table());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Table> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Saas.Entity.Administrator.Tables.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Table() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Table(Table other) : this() {
          id_ = other.id_;
          restaurantId_ = other.restaurantId_;
          numberOfSeat_ = other.numberOfSeat_;
          stateId_ = other.stateId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Table Clone() {
          return new Table(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id {
          get { return id_; }
          set {
            id_ = value;
          }
        }

        /// <summary>Field number for the "restaurantId" field.</summary>
        public const int RestaurantIdFieldNumber = 2;
        private int restaurantId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RestaurantId {
          get { return restaurantId_; }
          set {
            restaurantId_ = value;
          }
        }

        /// <summary>Field number for the "numberOfSeat" field.</summary>
        public const int NumberOfSeatFieldNumber = 3;
        private int numberOfSeat_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int NumberOfSeat {
          get { return numberOfSeat_; }
          set {
            numberOfSeat_ = value;
          }
        }

        /// <summary>Field number for the "stateId" field.</summary>
        public const int StateIdFieldNumber = 4;
        private int stateId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int StateId {
          get { return stateId_; }
          set {
            stateId_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Table);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Table other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (RestaurantId != other.RestaurantId) return false;
          if (NumberOfSeat != other.NumberOfSeat) return false;
          if (StateId != other.StateId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id != 0) hash ^= Id.GetHashCode();
          if (RestaurantId != 0) hash ^= RestaurantId.GetHashCode();
          if (NumberOfSeat != 0) hash ^= NumberOfSeat.GetHashCode();
          if (StateId != 0) hash ^= StateId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Id);
          }
          if (RestaurantId != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(RestaurantId);
          }
          if (NumberOfSeat != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(NumberOfSeat);
          }
          if (StateId != 0) {
            output.WriteRawTag(32);
            output.WriteInt32(StateId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
          }
          if (RestaurantId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(RestaurantId);
          }
          if (NumberOfSeat != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfSeat);
          }
          if (StateId != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Table other) {
          if (other == null) {
            return;
          }
          if (other.Id != 0) {
            Id = other.Id;
          }
          if (other.RestaurantId != 0) {
            RestaurantId = other.RestaurantId;
          }
          if (other.NumberOfSeat != 0) {
            NumberOfSeat = other.NumberOfSeat;
          }
          if (other.StateId != 0) {
            StateId = other.StateId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Id = input.ReadInt32();
                break;
              }
              case 16: {
                RestaurantId = input.ReadInt32();
                break;
              }
              case 24: {
                NumberOfSeat = input.ReadInt32();
                break;
              }
              case 32: {
                StateId = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class RestaurantLanguage : pb::IMessage<RestaurantLanguage> {
    private static readonly pb::MessageParser<RestaurantLanguage> _parser = new pb::MessageParser<RestaurantLanguage>(() => new RestaurantLanguage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestaurantLanguage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.Administrator.AdministratorReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantLanguage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantLanguage(RestaurantLanguage other) : this() {
      id_ = other.id_;
      restaurantId_ = other.restaurantId_;
      languageId_ = other.languageId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestaurantLanguage Clone() {
      return new RestaurantLanguage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "restaurantId" field.</summary>
    public const int RestaurantIdFieldNumber = 2;
    private int restaurantId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RestaurantId {
      get { return restaurantId_; }
      set {
        restaurantId_ = value;
      }
    }

    /// <summary>Field number for the "languageId" field.</summary>
    public const int LanguageIdFieldNumber = 3;
    private int languageId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LanguageId {
      get { return languageId_; }
      set {
        languageId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestaurantLanguage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestaurantLanguage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RestaurantId != other.RestaurantId) return false;
      if (LanguageId != other.LanguageId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RestaurantId != 0) hash ^= RestaurantId.GetHashCode();
      if (LanguageId != 0) hash ^= LanguageId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RestaurantId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RestaurantId);
      }
      if (LanguageId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LanguageId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RestaurantId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RestaurantId);
      }
      if (LanguageId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LanguageId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestaurantLanguage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RestaurantId != 0) {
        RestaurantId = other.RestaurantId;
      }
      if (other.LanguageId != 0) {
        LanguageId = other.LanguageId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RestaurantId = input.ReadInt32();
            break;
          }
          case 24: {
            LanguageId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OkMessage : pb::IMessage<OkMessage> {
    private static readonly pb::MessageParser<OkMessage> _parser = new pb::MessageParser<OkMessage>(() => new OkMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OkMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.Administrator.AdministratorReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OkMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OkMessage(OkMessage other) : this() {
      idMessage_ = other.idMessage_;
      op_ = other.op_;
      fullNameReturnObjects_ = other.fullNameReturnObjects_;
      restaurantObjs_ = other.restaurantObjs_ != null ? other.restaurantObjs_.Clone() : null;
      itemObjs_ = other.itemObjs_ != null ? other.itemObjs_.Clone() : null;
      restaurantMenuObjs_ = other.restaurantMenuObjs_ != null ? other.restaurantMenuObjs_.Clone() : null;
      menuObjs_ = other.menuObjs_ != null ? other.menuObjs_.Clone() : null;
      menuItemObjs_ = other.menuItemObjs_ != null ? other.menuItemObjs_.Clone() : null;
      tableObjs_ = other.tableObjs_ != null ? other.tableObjs_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OkMessage Clone() {
      return new OkMessage(this);
    }

    /// <summary>Field number for the "idMessage" field.</summary>
    public const int IdMessageFieldNumber = 1;
    private int idMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdMessage {
      get { return idMessage_; }
      set {
        idMessage_ = value;
      }
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 2;
    private string op_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Op {
      get { return op_; }
      set {
        op_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fullNameReturnObjects" field.</summary>
    public const int FullNameReturnObjectsFieldNumber = 3;
    private string fullNameReturnObjects_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FullNameReturnObjects {
      get { return fullNameReturnObjects_; }
      set {
        fullNameReturnObjects_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "restaurantObjs" field.</summary>
    public const int RestaurantObjsFieldNumber = 4;
    private global::Saas.Entity.Administrator.Restaurants restaurantObjs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Entity.Administrator.Restaurants RestaurantObjs {
      get { return restaurantObjs_; }
      set {
        restaurantObjs_ = value;
      }
    }

    /// <summary>Field number for the "itemObjs" field.</summary>
    public const int ItemObjsFieldNumber = 5;
    private global::Saas.Entity.Administrator.Items itemObjs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Entity.Administrator.Items ItemObjs {
      get { return itemObjs_; }
      set {
        itemObjs_ = value;
      }
    }

    /// <summary>Field number for the "restaurantMenuObjs" field.</summary>
    public const int RestaurantMenuObjsFieldNumber = 6;
    private global::Saas.Entity.Administrator.RestaurantMenus restaurantMenuObjs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Entity.Administrator.RestaurantMenus RestaurantMenuObjs {
      get { return restaurantMenuObjs_; }
      set {
        restaurantMenuObjs_ = value;
      }
    }

    /// <summary>Field number for the "menuObjs" field.</summary>
    public const int MenuObjsFieldNumber = 7;
    private global::Saas.Entity.Administrator.Menus menuObjs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Entity.Administrator.Menus MenuObjs {
      get { return menuObjs_; }
      set {
        menuObjs_ = value;
      }
    }

    /// <summary>Field number for the "menuItemObjs" field.</summary>
    public const int MenuItemObjsFieldNumber = 8;
    private global::Saas.Entity.Administrator.MenuItems menuItemObjs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Entity.Administrator.MenuItems MenuItemObjs {
      get { return menuItemObjs_; }
      set {
        menuItemObjs_ = value;
      }
    }

    /// <summary>Field number for the "tableObjs" field.</summary>
    public const int TableObjsFieldNumber = 9;
    private global::Saas.Entity.Administrator.Tables tableObjs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Entity.Administrator.Tables TableObjs {
      get { return tableObjs_; }
      set {
        tableObjs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OkMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OkMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdMessage != other.IdMessage) return false;
      if (Op != other.Op) return false;
      if (FullNameReturnObjects != other.FullNameReturnObjects) return false;
      if (!object.Equals(RestaurantObjs, other.RestaurantObjs)) return false;
      if (!object.Equals(ItemObjs, other.ItemObjs)) return false;
      if (!object.Equals(RestaurantMenuObjs, other.RestaurantMenuObjs)) return false;
      if (!object.Equals(MenuObjs, other.MenuObjs)) return false;
      if (!object.Equals(MenuItemObjs, other.MenuItemObjs)) return false;
      if (!object.Equals(TableObjs, other.TableObjs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdMessage != 0) hash ^= IdMessage.GetHashCode();
      if (Op.Length != 0) hash ^= Op.GetHashCode();
      if (FullNameReturnObjects.Length != 0) hash ^= FullNameReturnObjects.GetHashCode();
      if (restaurantObjs_ != null) hash ^= RestaurantObjs.GetHashCode();
      if (itemObjs_ != null) hash ^= ItemObjs.GetHashCode();
      if (restaurantMenuObjs_ != null) hash ^= RestaurantMenuObjs.GetHashCode();
      if (menuObjs_ != null) hash ^= MenuObjs.GetHashCode();
      if (menuItemObjs_ != null) hash ^= MenuItemObjs.GetHashCode();
      if (tableObjs_ != null) hash ^= TableObjs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdMessage != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdMessage);
      }
      if (Op.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Op);
      }
      if (FullNameReturnObjects.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FullNameReturnObjects);
      }
      if (restaurantObjs_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RestaurantObjs);
      }
      if (itemObjs_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ItemObjs);
      }
      if (restaurantMenuObjs_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(RestaurantMenuObjs);
      }
      if (menuObjs_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(MenuObjs);
      }
      if (menuItemObjs_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MenuItemObjs);
      }
      if (tableObjs_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TableObjs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdMessage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdMessage);
      }
      if (Op.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Op);
      }
      if (FullNameReturnObjects.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FullNameReturnObjects);
      }
      if (restaurantObjs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RestaurantObjs);
      }
      if (itemObjs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemObjs);
      }
      if (restaurantMenuObjs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RestaurantMenuObjs);
      }
      if (menuObjs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MenuObjs);
      }
      if (menuItemObjs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MenuItemObjs);
      }
      if (tableObjs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TableObjs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OkMessage other) {
      if (other == null) {
        return;
      }
      if (other.IdMessage != 0) {
        IdMessage = other.IdMessage;
      }
      if (other.Op.Length != 0) {
        Op = other.Op;
      }
      if (other.FullNameReturnObjects.Length != 0) {
        FullNameReturnObjects = other.FullNameReturnObjects;
      }
      if (other.restaurantObjs_ != null) {
        if (restaurantObjs_ == null) {
          RestaurantObjs = new global::Saas.Entity.Administrator.Restaurants();
        }
        RestaurantObjs.MergeFrom(other.RestaurantObjs);
      }
      if (other.itemObjs_ != null) {
        if (itemObjs_ == null) {
          ItemObjs = new global::Saas.Entity.Administrator.Items();
        }
        ItemObjs.MergeFrom(other.ItemObjs);
      }
      if (other.restaurantMenuObjs_ != null) {
        if (restaurantMenuObjs_ == null) {
          RestaurantMenuObjs = new global::Saas.Entity.Administrator.RestaurantMenus();
        }
        RestaurantMenuObjs.MergeFrom(other.RestaurantMenuObjs);
      }
      if (other.menuObjs_ != null) {
        if (menuObjs_ == null) {
          MenuObjs = new global::Saas.Entity.Administrator.Menus();
        }
        MenuObjs.MergeFrom(other.MenuObjs);
      }
      if (other.menuItemObjs_ != null) {
        if (menuItemObjs_ == null) {
          MenuItemObjs = new global::Saas.Entity.Administrator.MenuItems();
        }
        MenuItemObjs.MergeFrom(other.MenuItemObjs);
      }
      if (other.tableObjs_ != null) {
        if (tableObjs_ == null) {
          TableObjs = new global::Saas.Entity.Administrator.Tables();
        }
        TableObjs.MergeFrom(other.TableObjs);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdMessage = input.ReadInt32();
            break;
          }
          case 18: {
            Op = input.ReadString();
            break;
          }
          case 26: {
            FullNameReturnObjects = input.ReadString();
            break;
          }
          case 34: {
            if (restaurantObjs_ == null) {
              RestaurantObjs = new global::Saas.Entity.Administrator.Restaurants();
            }
            input.ReadMessage(RestaurantObjs);
            break;
          }
          case 42: {
            if (itemObjs_ == null) {
              ItemObjs = new global::Saas.Entity.Administrator.Items();
            }
            input.ReadMessage(ItemObjs);
            break;
          }
          case 50: {
            if (restaurantMenuObjs_ == null) {
              RestaurantMenuObjs = new global::Saas.Entity.Administrator.RestaurantMenus();
            }
            input.ReadMessage(RestaurantMenuObjs);
            break;
          }
          case 58: {
            if (menuObjs_ == null) {
              MenuObjs = new global::Saas.Entity.Administrator.Menus();
            }
            input.ReadMessage(MenuObjs);
            break;
          }
          case 66: {
            if (menuItemObjs_ == null) {
              MenuItemObjs = new global::Saas.Entity.Administrator.MenuItems();
            }
            input.ReadMessage(MenuItemObjs);
            break;
          }
          case 74: {
            if (tableObjs_ == null) {
              TableObjs = new global::Saas.Entity.Administrator.Tables();
            }
            input.ReadMessage(TableObjs);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReturnCarrier : pb::IMessage<ReturnCarrier> {
    private static readonly pb::MessageParser<ReturnCarrier> _parser = new pb::MessageParser<ReturnCarrier>(() => new ReturnCarrier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReturnCarrier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Entity.Administrator.AdministratorReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReturnCarrier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReturnCarrier(ReturnCarrier other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      ok_ = other.ok_ != null ? other.ok_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReturnCarrier Clone() {
      return new ReturnCarrier(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Saas.Err.Message error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Err.Message Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "ok" field.</summary>
    public const int OkFieldNumber = 2;
    private global::Saas.Entity.Administrator.OkMessage ok_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Entity.Administrator.OkMessage Ok {
      get { return ok_; }
      set {
        ok_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReturnCarrier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReturnCarrier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(Ok, other.Ok)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (error_ != null) hash ^= Error.GetHashCode();
      if (ok_ != null) hash ^= Ok.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (ok_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Ok);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (ok_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ok);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReturnCarrier other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Saas.Err.Message();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.ok_ != null) {
        if (ok_ == null) {
          Ok = new global::Saas.Entity.Administrator.OkMessage();
        }
        Ok.MergeFrom(other.Ok);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Saas.Err.Message();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            if (ok_ == null) {
              Ok = new global::Saas.Entity.Administrator.OkMessage();
            }
            input.ReadMessage(Ok);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
