// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/err.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Saas.Err {

  /// <summary>Holder for reflection information generated from Protos/err.proto</summary>
  public static partial class ErrReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/err.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ErrReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBQcm90b3MvZXJyLnByb3RvEgNFcnIiQQoNTm90QXV0aG9yaXplZBINCgVs",
            "b2dJZBgBIAEoBRIMCgR1c2VyGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJ",
            "IkQKEE5vdEF1dGhlbnRpY2F0ZWQSDQoFbG9nSWQYASABKAUSDAoEdXNlchgC",
            "IAEoCRITCgtkZXNjcmlwdGlvbhgDIAEoCSJEChBPcGVyYXRpb25JbGxlZ2Fs",
            "Eg0KBWxvZ0lkGAEgASgFEgwKBHVzZXIYAiABKAkSEwoLZGVzY3JpcHRpb24Y",
            "AyABKAkilgEKB01lc3NhZ2USLwoQbm90QXV0aGVudGljYXRlZBgBIAEoCzIV",
            "LkVyci5Ob3RBdXRoZW50aWNhdGVkEikKDW5vdEF1dGhvcml6ZWQYAiABKAsy",
            "Ei5FcnIuTm90QXV0aG9yaXplZBIvChBvcGVyYXRpb25JbGxlZ2FsGAMgASgL",
            "MhUuRXJyLk9wZXJhdGlvbklsbGVnYWxCC6oCCFNhYXMuRXJyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Err.NotAuthorized), global::Saas.Err.NotAuthorized.Parser, new[]{ "LogId", "User", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Err.NotAuthenticated), global::Saas.Err.NotAuthenticated.Parser, new[]{ "LogId", "User", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Err.OperationIllegal), global::Saas.Err.OperationIllegal.Parser, new[]{ "LogId", "User", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saas.Err.Message), global::Saas.Err.Message.Parser, new[]{ "NotAuthenticated", "NotAuthorized", "OperationIllegal" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class NotAuthorized : pb::IMessage<NotAuthorized> {
    private static readonly pb::MessageParser<NotAuthorized> _parser = new pb::MessageParser<NotAuthorized>(() => new NotAuthorized());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotAuthorized> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Err.ErrReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotAuthorized() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotAuthorized(NotAuthorized other) : this() {
      logId_ = other.logId_;
      user_ = other.user_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotAuthorized Clone() {
      return new NotAuthorized(this);
    }

    /// <summary>Field number for the "logId" field.</summary>
    public const int LogIdFieldNumber = 1;
    private int logId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LogId {
      get { return logId_; }
      set {
        logId_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotAuthorized);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotAuthorized other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LogId != other.LogId) return false;
      if (User != other.User) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LogId != 0) hash ^= LogId.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LogId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LogId);
      }
      if (User.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(User);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LogId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LogId);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotAuthorized other) {
      if (other == null) {
        return;
      }
      if (other.LogId != 0) {
        LogId = other.LogId;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LogId = input.ReadInt32();
            break;
          }
          case 18: {
            User = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NotAuthenticated : pb::IMessage<NotAuthenticated> {
    private static readonly pb::MessageParser<NotAuthenticated> _parser = new pb::MessageParser<NotAuthenticated>(() => new NotAuthenticated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NotAuthenticated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Err.ErrReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotAuthenticated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotAuthenticated(NotAuthenticated other) : this() {
      logId_ = other.logId_;
      user_ = other.user_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NotAuthenticated Clone() {
      return new NotAuthenticated(this);
    }

    /// <summary>Field number for the "logId" field.</summary>
    public const int LogIdFieldNumber = 1;
    private int logId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LogId {
      get { return logId_; }
      set {
        logId_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NotAuthenticated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NotAuthenticated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LogId != other.LogId) return false;
      if (User != other.User) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LogId != 0) hash ^= LogId.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LogId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LogId);
      }
      if (User.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(User);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LogId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LogId);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NotAuthenticated other) {
      if (other == null) {
        return;
      }
      if (other.LogId != 0) {
        LogId = other.LogId;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LogId = input.ReadInt32();
            break;
          }
          case 18: {
            User = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OperationIllegal : pb::IMessage<OperationIllegal> {
    private static readonly pb::MessageParser<OperationIllegal> _parser = new pb::MessageParser<OperationIllegal>(() => new OperationIllegal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OperationIllegal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Err.ErrReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationIllegal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationIllegal(OperationIllegal other) : this() {
      logId_ = other.logId_;
      user_ = other.user_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OperationIllegal Clone() {
      return new OperationIllegal(this);
    }

    /// <summary>Field number for the "logId" field.</summary>
    public const int LogIdFieldNumber = 1;
    private int logId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LogId {
      get { return logId_; }
      set {
        logId_ = value;
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OperationIllegal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OperationIllegal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LogId != other.LogId) return false;
      if (User != other.User) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LogId != 0) hash ^= LogId.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LogId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LogId);
      }
      if (User.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(User);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LogId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LogId);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OperationIllegal other) {
      if (other == null) {
        return;
      }
      if (other.LogId != 0) {
        LogId = other.LogId;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LogId = input.ReadInt32();
            break;
          }
          case 18: {
            User = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saas.Err.ErrReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      notAuthenticated_ = other.notAuthenticated_ != null ? other.notAuthenticated_.Clone() : null;
      notAuthorized_ = other.notAuthorized_ != null ? other.notAuthorized_.Clone() : null;
      operationIllegal_ = other.operationIllegal_ != null ? other.operationIllegal_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "notAuthenticated" field.</summary>
    public const int NotAuthenticatedFieldNumber = 1;
    private global::Saas.Err.NotAuthenticated notAuthenticated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Err.NotAuthenticated NotAuthenticated {
      get { return notAuthenticated_; }
      set {
        notAuthenticated_ = value;
      }
    }

    /// <summary>Field number for the "notAuthorized" field.</summary>
    public const int NotAuthorizedFieldNumber = 2;
    private global::Saas.Err.NotAuthorized notAuthorized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Err.NotAuthorized NotAuthorized {
      get { return notAuthorized_; }
      set {
        notAuthorized_ = value;
      }
    }

    /// <summary>Field number for the "operationIllegal" field.</summary>
    public const int OperationIllegalFieldNumber = 3;
    private global::Saas.Err.OperationIllegal operationIllegal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saas.Err.OperationIllegal OperationIllegal {
      get { return operationIllegal_; }
      set {
        operationIllegal_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NotAuthenticated, other.NotAuthenticated)) return false;
      if (!object.Equals(NotAuthorized, other.NotAuthorized)) return false;
      if (!object.Equals(OperationIllegal, other.OperationIllegal)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (notAuthenticated_ != null) hash ^= NotAuthenticated.GetHashCode();
      if (notAuthorized_ != null) hash ^= NotAuthorized.GetHashCode();
      if (operationIllegal_ != null) hash ^= OperationIllegal.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (notAuthenticated_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NotAuthenticated);
      }
      if (notAuthorized_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NotAuthorized);
      }
      if (operationIllegal_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OperationIllegal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (notAuthenticated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotAuthenticated);
      }
      if (notAuthorized_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotAuthorized);
      }
      if (operationIllegal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OperationIllegal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.notAuthenticated_ != null) {
        if (notAuthenticated_ == null) {
          NotAuthenticated = new global::Saas.Err.NotAuthenticated();
        }
        NotAuthenticated.MergeFrom(other.NotAuthenticated);
      }
      if (other.notAuthorized_ != null) {
        if (notAuthorized_ == null) {
          NotAuthorized = new global::Saas.Err.NotAuthorized();
        }
        NotAuthorized.MergeFrom(other.NotAuthorized);
      }
      if (other.operationIllegal_ != null) {
        if (operationIllegal_ == null) {
          OperationIllegal = new global::Saas.Err.OperationIllegal();
        }
        OperationIllegal.MergeFrom(other.OperationIllegal);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (notAuthenticated_ == null) {
              NotAuthenticated = new global::Saas.Err.NotAuthenticated();
            }
            input.ReadMessage(NotAuthenticated);
            break;
          }
          case 18: {
            if (notAuthorized_ == null) {
              NotAuthorized = new global::Saas.Err.NotAuthorized();
            }
            input.ReadMessage(NotAuthorized);
            break;
          }
          case 26: {
            if (operationIllegal_ == null) {
              OperationIllegal = new global::Saas.Err.OperationIllegal();
            }
            input.ReadMessage(OperationIllegal);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
